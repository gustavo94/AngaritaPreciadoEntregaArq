Microsoft (R) Macro Assembler Version 10.00.30319.01	    06/10/14 19:45:12
ESTADÍSTICAS						(main.asm  Page 1 - 1


				TITLE ESTADÍSTICAS						(main.asm)

				; Descripción:
				; Este software fue desarrollado para la clase de Arquitectura de Computadores 2014-I
				; Esta diseñado para generar diferentes estadísticas a partir de datos contenidos en un archivo de texto

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 
				INCLUDE Macros.inc
			      C .NOLIST
			      C .LIST
			      C 

				PTRREAL8 TYPEDEF PTR REAL8 ;tipo de datos para punteros a real8

 00000000			.DATA

				;código de la tilde: a=160, e=130, i=161, o=162, u=163

				;decoración del mensaje de bienvenida
 00000000 DB 00 B2 00 B1	CuadrosAscii BYTE 219,0,178,0,177,0," ",0;176,0,177,0,178,0,219,0
	   00 20 00
				;CuadrosAscii BYTE 220,0,219,0,223,0,219,0;176,0,177,0,178,0,219,0  ;219,0,219,0,178,0,177,0,176,0
				;CuadrosAscii BYTE 220,0,219,0,223,0,219,0,220,0,219,0,223,0,220,0
 00000008 00000000		contadorBarra DWORD 0 ; contador para animaciones

				;líneas del mensaje de bienvenida 
				;con espacios en blanco para que cada mensaje se vea centrado
 0000000C  0000000E [		mensaje DWORD 14 DUP(0)	; array que tiene la dirección donde empieza cada una de las líneas del mensaje
	    00000000
	   ]
 = 0000000D			numLineasMsjBv = 13
 00000044 20 00			mensajeBienvenida1 BYTE			       " ",0																					;1 caracter
 00000046  00000011 [		mensajeBienvenida2 BYTE			       17 DUP(" "),"Bienvenido al programa de estudio estad",161d,"stico",0						;45 caracteres
	    20
	   ] 42 69 65 6E
	   76 65 6E 69 64
	   6F 20 61 6C 20
	   70 72 6F 67 72
	   61 6D 61 20 64
	   65 20 65 73 74
	   75 64 69 6F 20
	   65 73 74 61 64
	   A1 73 74 69 63
	   6F 00
 00000085 20 00			mensajeBienvenida3 BYTE			       " ",0																					;1 caracter
 00000087  00000017 [		mensajeBienvenida4 BYTE				   23 DUP(" "),"Arquitectura del Computador 2014-I",0										;34 caracteres 
	    20
	   ] 41 72 71 75
	   69 74 65 63 74
	   75 72 61 20 64
	   65 6C 20 43 6F
	   6D 70 75 74 61
	   64 6F 72 20 32
	   30 31 34 2D 49
	   00
 000000C1 20 00			mensajeBienvenida5 BYTE			       " ",0																					;1 caracter   
 000000C3  00000016 [		mensajeBienvenida6 BYTE				   22 DUP(" "),"Este software fue desarrollado por:",0										;35 caracteres
	    20
	   ] 45 73 74 65
	   20 73 6F 66 74
	   77 61 72 65 20
	   66 75 65 20 64
	   65 73 61 72 72
	   6F 6C 6C 61 64
	   6F 20 70 6F 72
	   3A 00
 000000FD  00000011 [		mensajeBienvenida7 BYTE				   17 DUP(" "),"Gustavo Le",162d,"n Preciado Jim",130d,"nez C.C. 1037635880",0				;45 caracteres
	    20
	   ] 47 75 73 74
	   61 76 6F 20 4C
	   65 A2 6E 20 50
	   72 65 63 69 61
	   64 6F 20 4A 69
	   6D 82 6E 65 7A
	   20 43 2E 43 2E
	   20 31 30 33 37
	   36 33 35 38 38
	   30 00
 0000013C  00000010 [		mensajeBienvenida8 BYTE				   16 DUP(" "),"Gustavo Andr",130d,"s Angarita Vel",160d,"squez C.C. 1037635327",0			;48 caracteres
	    20
	   ] 47 75 73 74
	   61 76 6F 20 41
	   6E 64 72 82 73
	   20 41 6E 67 61
	   72 69 74 61 20
	   56 65 6C A0 73
	   71 75 65 7A 20
	   43 2E 43 2E 20
	   31 30 33 37 36
	   33 35 33 32 37
	   00
 0000017E 20 00			mensajeBienvenida9 BYTE			       " ",0																					;1 caracter
 00000180  00000013 [		mensajeBienvenida10 BYTE			   19 DUP(" "),"Este software est",160d," dise",164d,"ado para calcular",0					;41 caracteres
	    20
	   ] 45 73 74 65
	   20 73 6F 66 74
	   77 61 72 65 20
	   65 73 74 A0 20
	   64 69 73 65 A4
	   61 64 6F 20 70
	   61 72 61 20 63
	   61 6C 63 75 6C
	   61 72 00
 000001BD  00000014 [		mensajeBienvenida11 BYTE			   20 DUP(" "),"distintas medidas estad",161d,"sticas a partir",0							;39 caracteres
	    20
	   ] 64 69 73 74
	   69 6E 74 61 73
	   20 6D 65 64 69
	   64 61 73 20 65
	   73 74 61 64 A1
	   73 74 69 63 61
	   73 20 61 20 70
	   61 72 74 69 72
	   00
 000001F9  0000001B [		mensajeBienvenida12 BYTE			   27 DUP(" "),"de los datos de un archivo",0												;26 caracteres
	    20
	   ] 64 65 20 6C
	   6F 73 20 64 61
	   74 6F 73 20 64
	   65 20 75 6E 20
	   61 72 63 68 69
	   76 6F 00
 0000022F  0000000A [		mensajeBienvenida13 BYTE			   10 DUP(" "), 60 DUP("-"),0; indica el final del mensaje.									;60 caracteres
	    20
	   ]
	   0000003C [
	    2D
	   ] 00
 00000276 20 00			mensajeBienvenida14 BYTE			   " ",0																					;1 caracter

				;líneas del mensaje de despedida 
				;con espacios en blanco para que cada mensaje se vea centrado
 00000278  0000000E [		mensajeD DWORD 14 DUP(0)	; array que tiene la dirección donde empieza cada una de las líneas del mensaje
	    00000000
	   ]
 = 00000004			numLineasMsjDp = 4
 000002B0 20 00			mensajeDespedida1 BYTE			       " ",0																					;1 caracter
 000002B2  00000017 [		mensajeDespedida2 BYTE			       23 DUP(" "),"Gracias por usar nuestro software.",0										;34 caracteres
	    20
	   ] 47 72 61 63
	   69 61 73 20 70
	   6F 72 20 75 73
	   61 72 20 6E 75
	   65 73 74 72 6F
	   20 73 6F 66 74
	   77 61 72 65 2E
	   00
 000002EC 20 00			mensajeDespedida3 BYTE			       " ",0																					;1 caracter
 000002EE  00000016 [		mensajeDespedida4 BYTE				   22 DUP(" "),"Esperamos que haya sido de utilidad.",0										;36 caracteres 
	    20
	   ] 45 73 70 65
	   72 61 6D 6F 73
	   20 71 75 65 20
	   68 61 79 61 20
	   73 69 64 6F 20
	   64 65 20 75 74
	   69 6C 69 64 61
	   64 2E 00
 00000329 20 00			mensajeDespedida5 BYTE			       " ",0																					;1 caracter																				;1 caracter

 0000032B 00000000		contadorMensaje DWORD 0 ;servirá para desplazar el mensaje de bienvenida/despedida
 0000032F 00			contMensaje BYTE 0

				;cuenta cuántas veces ha sido ejecutado el programa
 00000330 00000000		contEjecuciones DWORD 0

 00000334  00000005 [		auxCiclos	DWORD 5 DUP(0); array que servirá como variables auxiliares y de control durante los ciclos
	    00000000
	   ]

 00000348 000A 000A		tiempoEspera WORD 10,10 ; tiempos de espera para las animaciones

				;fondos y colores de texto
 = 000000F9			colores1 EQU lightBlue + (white * 16); Azul claro sobre blanco
 = 0000009B			colores2 EQU lightCyan + (lightBlue * 16)
 = 0000009F			colores3 EQU white + (lightBlue * 16)


 0000034C 31 2E 20 4D 65	stringEstadisticos BYTE "1. Media aritm",130,"tica",0dh,0ah
	   64 69 61 20 61
	   72 69 74 6D 82
	   74 69 63 61 0D
	   0A
 00000361  32 2E 20 4D 65					   BYTE	"2. Mediana",0dh,0ah
	   64 69 61 6E 61
	   0D 0A
 0000036D  33 2E 20 4D 6F					   BYTE	"3. Moda",0dh,0ah
	   64 61 0D 0A
 00000376  34 2E 20 4D 65					   BYTE "4. Media geom",130,"trica",0dh,0ah
	   64 69 61 20 67
	   65 6F 6D 82 74
	   72 69 63 61 0D
	   0A
 0000038B  35 2E 20 4D 65					   BYTE	"5. Media arm",162,"nica",0dh,0ah
	   64 69 61 20 61
	   72 6D A2 6E 69
	   63 61 0D 0A
 0000039E  36 2E 20 50 65					   BYTE	"6. Percentiles",0dh,0ah
	   72 63 65 6E 74
	   69 6C 65 73 0D
	   0A
 000003AE  37 2E 20 43 75					   BYTE	"7. Cuartiles",0dh,0ah
	   61 72 74 69 6C
	   65 73 0D 0A
 000003BC  38 2E 20 44 65					   BYTE	"8. Deciles",0dh,0ah
	   63 69 6C 65 73
	   0D 0A
 000003C8  39 2E 20 4D 6F					   BYTE	"9. Momentos respecto al origen",0dh,0ah
	   6D 65 6E 74 6F
	   73 20 72 65 73
	   70 65 63 74 6F
	   20 61 6C 20 6F
	   72 69 67 65 6E
	   0D 0A
 000003E8  31 30 2E 20 4D					   BYTE	"10. Momentos centrales o respecto a la media",0dh,0ah
	   6F 6D 65 6E 74
	   6F 73 20 63 65
	   6E 74 72 61 6C
	   65 73 20 6F 20
	   72 65 73 70 65
	   63 74 6F 20 61
	   20 6C 61 20 6D
	   65 64 69 61 0D
	   0A
 00000416  31 31 2E 20 56					   BYTE	"11. Varianza",0dh,0ah
	   61 72 69 61 6E
	   7A 61 0D 0A
 00000424  31 32 2E 20 44					   BYTE	"12. Desviaci",162,"n t",161,"pica",0dh,0ah
	   65 73 76 69 61
	   63 69 A2 6E 20
	   74 A1 70 69 63
	   61 0D 0A
 0000043B  31 33 2E 20 43					   BYTE	"13. Cuasi-varianza",0dh,0ah
	   75 61 73 69 2D
	   76 61 72 69 61
	   6E 7A 61 0D 0A
 0000044F  31 34 2E 20 44					   BYTE	"14. Desviaci",162,"n media respecto a la media",0dh,0ah
	   65 73 76 69 61
	   63 69 A2 6E 20
	   6D 65 64 69 61
	   20 72 65 73 70
	   65 63 74 6F 20
	   61 20 6C 61 20
	   6D 65 64 69 61
	   0D 0A
 00000479  31 35 2E 20 44					   BYTE	"15. Desviaci",162,"n media respecto a la mediana",0dh,0ah,0
	   65 73 76 69 61
	   63 69 A2 6E 20
	   6D 65 64 69 61
	   20 72 65 73 70
	   65 63 74 6F 20
	   61 20 6C 61 20
	   6D 65 64 69 61
	   6E 61 0D 0A 00

				;direccion del archivo
 000004A6  00000104 [		urlDatos BYTE 260 DUP(0)
	    00
	   ]
 000005AA 00000000		fileHandle  HANDLE ?

				;arreglos con los datos, los datos sin repetir y las frecuencias de los datos sin repetir
 = 00000258			maxDatos = 600
 000005AE  00000258 [		numeros REAL8 maxDatos DUP(-1.), -1.
	    BFF0000000000000
	   ]
	   BFF0000000000000
 00001876  00000258 [		numerosDistintos REAL8 maxDatos DUP(-1.), -1.
	    BFF0000000000000
	   ]
	   BFF0000000000000
 00002B3E  00000258 [		frecuencias QWORD maxDatos DUP(-1.), -1.
	    BFF0000000000000
	   ]
	   BFF0000000000000
 00003E06 00000000		cantDatos DWORD 0
 00003E0A 00000000		cantDatosDistintos DWORD 0
 00003E0E 00000000		frecuenciaMax DWORD 0 ;para la moda

				;auxiliar para leer los datos
 = 00001388			tamanoBufer = 5000
 00003E12  00001388 [		buferArchivo BYTE tamanoBufer DUP(?), 0
	    00
	   ] 00
 0000519B 00			datoActual BYTE ?
 0000519C 00000000		relleno DWORD 0 ;se debe poner para que el valor de realactual no interfiera en la lectura
 000051A0			realActual REAL8 ?
	   0000000000000000
 000051A8 00000000		coma DWORD 0
 000051AC 00000000		contCicloDecimales DWORD 0
 000051B0 00000000		realesLeidos DWORD 0
 000051B4 00000000		saltoDeLinea DWORD 0
 000051B8 00000000		finArchivo DWORD 0

				;auxiliares para las sumatorias
 000051BC			auxSumatoria REAL8 0.
	   0000000000000000
 000051C4			diez REAL8 10.
	   4024000000000000
 000051CC			unDecimo REAL8 0.1
	   3FB999999999999A

				;estadisticos
 000051D4			media REAL8 ?
	   0000000000000000
 000051DC			mediana REAL8 ?
	   0000000000000000
				;moda REAL8 maxDatos DUP(-1.), -1.
 000051E4			mediageometrica REAL8 ?
	   0000000000000000
 000051EC			mediaarmonica REAL8 ?
	   0000000000000000
 000051F4  00000065 [		percentiles REAL8 101 DUP(-1.)
	    BFF0000000000000
	   ]
 0000551C  00000005 [		cuartiles REAL8 5 DUP(-1.)
	    BFF0000000000000
	   ]
 00005544  0000000B [		deciles REAL8 11 DUP(-1.)
	    BFF0000000000000
	   ]
 0000559C			momentosOrigen REAL8 ?
	   0000000000000000
 000055A4			momentosCentrales REAL8 ?
	   0000000000000000
 000055AC			varianza REAL8 ?
	   0000000000000000
 000055B4			desvEstandar REAL8 ?
	   0000000000000000
 000055BC			cuasiVarianza REAL8 ?
	   0000000000000000
 000055C4			desvMedia REAL8 ?
	   0000000000000000
 000055CC			desvMediana REAL8 ?
	   0000000000000000

				;orden de los momentos
 000055D4 00000000		ordenMomOrig DWORD ?
 000055D8 00000000		ordenMomCent DWORD ?

				;contiene booleanos que indican si el usuario solicitó el estadístico n
 000055DC  00000028 [		buferUsuario BYTE 40 DUP(0)
	    00
	   ]
 00005604  0000000F [		boolEstadisticos DWORD 15 DUP(0)
	    00000000
	   ]

				;apunta a los diferentes estadisticos
 00005640  0000000F [		ptrEstaadisticos PTRREAL8 15 DUP(?)
	    00000000
	   ]






 00000000			.CODE

				;-----------------------------------------------------------------------------------------------------------
 00000000			main PROC
				;-----------------------------------------------------------------------------------------------------------
 00000000  9B DB E3		FINIT

				;prepara la consola
 00000003  B8 0000009B		MOV eax, colores2
 00000008  E8 00000000 E	CALL SetTextColor
 0000000D  E8 00000000 E	CALL Clrscr

				;mensaje de bienvenida
 00000012  E8 0000022B		CALL pintarBarrasIni
 00000017  E8 000000B4		CALL cargarMensaje
 0000001C			inicio:
 0000001C  E8 0000016E		CALL mostrarMensaje
 00000021  FE 05 0000032F R	INC contMensaje
 00000027  80 3D 0000032F R	CMP contMensaje, 23
	   17
 0000002E  7C EC		JL inicio
 00000030  E8 00000000 E	CALL waitMsg
 00000035  E8 00000000 E	CALL Clrscr

				;hace todos los cálculos
 0000003A  E8 0000037E		CALL leerArchivo

 0000003F			ejec:
 0000003F  B8 0000009F		MOV eax, colores3
 00000044  E8 00000000 E	CALL SetTextColor
 00000049  E8 00000000 E	CALL Clrscr
 0000004E  E8 000002AB		CALL contadorEjec
				mWrite <"Para cada ejecuci",162,"n usted puede utilizar un orden diferente para los momentos",0dh,0ah,"Por favor ingr",130,"selos a continuaci",162,"n",0dh,0ah>
 0000567C		     1		.data		
 0000567C 50 61 72 61 20     1		??0000 BYTE "Para cada ejecuci",162,"n usted puede utilizar un orden diferente para los momentos",0dh,0ah,"Por favor ingr",130,"selos a continuaci",162,"n",0dh,0ah,0	
	   63 61 64 61 20
	   65 6A 65 63 75
	   63 69 A2 6E 20
	   75 73 74 65 64
	   20 70 75 65 64
	   65 20 75 74 69
	   6C 69 7A 61 72
	   20 75 6E 20 6F
	   72 64 65 6E 20
	   64 69 66 65 72
	   65 6E 74 65 20
	   70 61 72 61 20
	   6C 6F 73 20 6D
	   6F 6D 65 6E 74
	   6F 73 0D 0A 50
	   6F 72 20 66 61
	   76 6F 72 20 69
	   6E 67 72 82 73
	   65 6C 6F 73 20
	   61 20 63 6F 6E
	   74 69 6E 75 61
	   63 69 A2 6E 0D
	   0A 00
 00000053		     1		.code
 00000053  52		     1		push	edx
 00000054  BA 0000567C R     1		mov	edx,OFFSET ??0000
 00000059  E8 00000000 E     1		call	WriteString
 0000005E  5A		     1		pop	edx
 0000005F  E8 00000000 E	CALL crlf
				mWrite <"Por favor indique el orden que se usar",160," para calcular el momento ",0dh,0ah,"con respecto al origen:",0dh,0ah>
 000056F1		     1		.data		
 000056F1 50 6F 72 20 66     1		??0001 BYTE "Por favor indique el orden que se usar",160," para calcular el momento ",0dh,0ah,"con respecto al origen:",0dh,0ah,0	
	   61 76 6F 72 20
	   69 6E 64 69 71
	   75 65 20 65 6C
	   20 6F 72 64 65
	   6E 20 71 75 65
	   20 73 65 20 75
	   73 61 72 A0 20
	   70 61 72 61 20
	   63 61 6C 63 75
	   6C 61 72 20 65
	   6C 20 6D 6F 6D
	   65 6E 74 6F 20
	   0D 0A 63 6F 6E
	   20 72 65 73 70
	   65 63 74 6F 20
	   61 6C 20 6F 72
	   69 67 65 6E 3A
	   0D 0A 00
 00000064		     1		.code
 00000064  52		     1		push	edx
 00000065  BA 000056F1 R     1		mov	edx,OFFSET ??0001
 0000006A  E8 00000000 E     1		call	WriteString
 0000006F  5A		     1		pop	edx
 00000070  E8 00000000 E	CALL readInt
 00000075  A3 000055D4 R	MOV ordenMomOrig, eax
				mWrite <"Por favor indique el orden que se usar",160," para calcular el momento ",0dh,0ah,"con respecto a la media",0dh,0ah>
 0000574E		     1		.data		
 0000574E 50 6F 72 20 66     1		??0002 BYTE "Por favor indique el orden que se usar",160," para calcular el momento ",0dh,0ah,"con respecto a la media",0dh,0ah,0	
	   61 76 6F 72 20
	   69 6E 64 69 71
	   75 65 20 65 6C
	   20 6F 72 64 65
	   6E 20 71 75 65
	   20 73 65 20 75
	   73 61 72 A0 20
	   70 61 72 61 20
	   63 61 6C 63 75
	   6C 61 72 20 65
	   6C 20 6D 6F 6D
	   65 6E 74 6F 20
	   0D 0A 63 6F 6E
	   20 72 65 73 70
	   65 63 74 6F 20
	   61 20 6C 61 20
	   6D 65 64 69 61
	   0D 0A 00
 0000007A		     1		.code
 0000007A  52		     1		push	edx
 0000007B  BA 0000574E R     1		mov	edx,OFFSET ??0002
 00000080  E8 00000000 E     1		call	WriteString
 00000085  5A		     1		pop	edx
 00000086  E8 00000000 E	CALL readInt
 0000008B  A3 000055D8 R	MOV ordenMomCent, eax
 00000090  E8 000004F0		CALL calcularEstadisticos
 00000095  E8 00000532		CALL pedirEstadisticos
 0000009A  E8 000005E4		CALL mostrarEstadisticosSelec

 0000009F  E8 00000000 E	CALL Crlf
				mWrite "Desea ejecutar nuevamente el programa? 1=si, 0=no"
 000057AB		     1		.data		
 000057AB 44 65 73 65 61     1		??0003 BYTE "Desea ejecutar nuevamente el programa? 1=si, 0=no",0	
	   20 65 6A 65 63
	   75 74 61 72 20
	   6E 75 65 76 61
	   6D 65 6E 74 65
	   20 65 6C 20 70
	   72 6F 67 72 61
	   6D 61 3F 20 31
	   3D 73 69 2C 20
	   30 3D 6E 6F 00
 000000A4		     1		.code
 000000A4  52		     1		push	edx
 000000A5  BA 000057AB R     1		mov	edx,OFFSET ??0003
 000000AA  E8 00000000 E     1		call	WriteString
 000000AF  5A		     1		pop	edx
 000000B0  E8 00000000 E	CALL Crlf
 000000B5  E8 00000000 E	CALL readInt
 000000BA  83 F8 00		CMP eax, 0 
 000000BD  75 80		JNE ejec

 000000BF  E8 00000288		CALL mostrarDespedida

 000000C4  E8 00000000 E	CALL waitMsg
					exit
 000000D0			main ENDP

				;-----------------------------------------------------------------------------------------------------------
 000000D0			cargarMensaje PROC
				;Carga los mensajes en el array
				;-----------------------------------------------------------------------------------------------------------
 000000D0  C7 05 0000000C R	MOV mensaje,OFFSET mensajeBienvenida1 
	   00000044 R
 000000DA  C7 05 00000010 R	MOV [mensaje+4],OFFSET mensajeBienvenida2
	   00000046 R
 000000E4  C7 05 00000014 R	MOV [mensaje+8],OFFSET mensajeBienvenida3
	   00000085 R
 000000EE  C7 05 00000018 R	MOV [mensaje+12],OFFSET mensajeBienvenida4
	   00000087 R
 000000F8  C7 05 0000001C R	MOV [mensaje+16],OFFSET mensajeBienvenida5
	   000000C1 R
 00000102  C7 05 00000020 R	MOV [mensaje+20],OFFSET mensajeBienvenida6
	   000000C3 R
 0000010C  C7 05 00000024 R	MOV [mensaje+24],OFFSET mensajeBienvenida7
	   000000FD R
 00000116  C7 05 00000028 R	MOV [mensaje+28],OFFSET mensajeBienvenida8
	   0000013C R
 00000120  C7 05 0000002C R	MOV [mensaje+32],OFFSET mensajeBienvenida9
	   0000017E R
 0000012A  C7 05 00000030 R	MOV [mensaje+36],OFFSET mensajeBienvenida10
	   00000180 R
 00000134  C7 05 00000034 R	MOV [mensaje+40],OFFSET mensajeBienvenida11
	   000001BD R
 0000013E  C7 05 00000038 R	MOV [mensaje+44],OFFSET mensajeBienvenida12
	   000001F9 R
 00000148  C7 05 0000003C R	MOV [mensaje+48],OFFSET mensajeBienvenida13
	   0000022F R
 00000152  C7 05 00000040 R	MOV [mensaje+52],OFFSET mensajeBienvenida14
	   00000276 R

 0000015C  C7 05 00000278 R	MOV mensajeD,OFFSET mensajeDespedida1
	   000002B0 R
 00000166  C7 05 0000027C R	MOV [mensajeD+4],OFFSET mensajeDespedida2
	   000002B2 R
 00000170  C7 05 00000280 R	MOV [mensajeD+8],OFFSET mensajeDespedida3
	   000002EC R
 0000017A  C7 05 00000284 R	MOV [mensajeD+12],OFFSET mensajeDespedida4
	   000002EE R
 00000184  C7 05 00000288 R	MOV [mensajeD+16],OFFSET mensajeDespedida5
	   00000329 R

 0000018E  C3			RET
 0000018F			cargarMensaje ENDP

				;-----------------------------------------------------------------------------------------------------------
 0000018F			mostrarMensaje PROC
				;Muestra el mensaje de bienvenida en 6 líneas entre dos barras animadas, las 6 líneas se van desplazando para 
				;mostrar todo el mensaje de bienvenida
				;-----------------------------------------------------------------------------------------------------------

 0000018F  E8 00000000 E	CALL Clrscr ; limpiar la pantalla

 00000194  E8 00000121		CALL animarBarra
 00000199  E8 0000011C		CALL animarBarra

				;CALL Crlf

 0000019E  B8 0000009F		MOV eax, colores3
 000001A3  E8 00000000 E	call SetTextColor

 000001A8  B9 00000006		MOV ecx,6
 000001AD  A1 0000032B R	MOV eax,contadorMensaje ; indica en qué línea debe empezar

 000001B2  A3 00000334 R	MOV auxCiclos,eax
 000001B7			CICLO: ; en este ciclo se imprimen las líneas dentro de  las barras

 000001B7  A1 00000334 R		MOV eax,auxCiclos
 000001BC  BA 00000004			MOV edx,4
 000001C1  F7 E2			MUL edx ; multiplica el numero de la línea por 4 para el desplazamiento en memoria

 000001C3  8B 90 0000000C R		MOV edx, [mensaje+eax]
 000001C9  E8 00000000 E		CALL WriteString ;imprime la línea del mensaje
 000001CE  E8 00000000 E		CALL Crlf

 000001D3  83 3D 00000334 R		CMP auxCiclos,numLineasMsjBv ; controla que el valor de auxCiclos siempre este entre 0 y el número de líneas del mensaje
	   0D
 000001DA  7C 0C			JL MENOR
 000001DC  C7 05 00000334 R		MOV auxCiclos,0
	   00000000
 000001E6  EB 06			JMP NoMENOR
 000001E8				MENOR:
 000001E8  FF 05 00000334 R		INC auxCiclos
 000001EE				NoMENOR:

 000001EE  E2 C7		LOOP CICLO

				;CALL Crlf

 000001F0  83 3D 0000032B R	cmp contadorMensaje,numLineasMsjBv ; controla que el valor de contadorMensaje siempre este entre 0 y el número de líneas del mensaje
	   0D
 000001F7  7C 0C		JL MEN
 000001F9  C7 05 0000032B R	MOV contadorMensaje,0
	   00000000
 00000203  EB 06		JMP NoMEN
 00000205			MEN:
 00000205  FF 05 0000032B R	INC contadormensaje
 0000020B			NoMEN:

 0000020B  E8 000000AA		CALL animarBarra
 00000210  E8 000000A5		CALL animarBarra


 00000215  66| A1			MOV ax, [tiempoEspera+2] 
	   0000034A R
					
 0000021B  E8 00000000 E		CALL delay
					
 00000220  83 3D 00000008 R		CMP contadorBarra, 6
	   06
 00000227  7C 0C			JL menor6
 00000229  C7 05 00000008 R			MOV contadorBarra, 0
	   00000000
 00000233  EB 0C				JMP finsi
 00000235				menor6:
 00000235  FF 05 00000008 R			INC contadorBarra
 0000023B  FF 05 00000008 R			INC contadorBarra
 00000241				finsi:
					
 00000241  C3			RET
 00000242			mostrarMensaje ENDP

				;-----------------------------------------------------------------------------------------------------------
 00000242			pintarBarrasIni PROC
				;Pinta las barras superior e inferior en una animación que pinta de a 4 caracteres (código ascii 176) hasta llegar a 80
				;-----------------------------------------------------------------------------------------------------------
 00000242  E8 0000002E		CALL pintarBarra ; barra superior
 00000247  E8 00000029		CALL pintarBarra ; barra superior

				;8 líneas en las que irá el mensaje de bienvenida
				;Líneas en blanco durante la entrada de las barras
				;CALL Crlf
 0000024C  E8 00000000 E	CALL Crlf
 00000251  E8 00000000 E	CALL Crlf
 00000256  E8 00000000 E	CALL Crlf	
 0000025B  E8 00000000 E	CALL Crlf
 00000260  E8 00000000 E	CALL Crlf
 00000265  E8 00000000 E	CALL Crlf
				;CALL Crlf

 0000026A  E8 00000006		CALL pintarBarra ; barra inferior
 0000026F  E8 00000001		CALL pintarBarra ; barra inferior

 00000274  C3			RET
 00000275			pintarBarrasIni ENDP

				;-----------------------------------------------------------------------------------------------------------
 00000275			pintarBarra PROC
				;Procedimiento auxiliar para pintarBarrasIni este pinta cada una de las barras cada que es llamado
				;-----------------------------------------------------------------------------------------------------------
 00000275  B8 0000009B		MOV eax, colores2
 0000027A  E8 00000000 E	CALL SetTextColor

 0000027F  B9 00000014		MOV	ecx, 20 ; el ciclo se realizará 20 veces para llegar a 80 caracteres
					
 00000284			CiloImprimir:
						
 00000284  BA 00000000 R		MOV edx, OFFSET CuadrosAscii;
 00000289  E8 00000000 E		CALL	WriteString
 0000028E  BA 00000002 R		MOV edx, OFFSET CuadrosAscii[2];
 00000293  E8 00000000 E		CALL	WriteString
 00000298  BA 00000004 R		MOV edx, OFFSET CuadrosAscii[4];
 0000029D  E8 00000000 E		CALL	WriteString
 000002A2  BA 00000006 R		MOV edx, OFFSET CuadrosAscii[6];
 000002A7  E8 00000000 E		CALL	WriteString

 000002AC  66| A1			MOV ax, tiempoEspera 
	   00000348 R
 000002B2  E8 00000000 E		CALL delay
					
					
 000002B7  E2 CB		LOOP CiloImprimir

 000002B9  C3			RET
 000002BA			pintarBarra ENDP

				;-----------------------------------------------------------------------------------------------------------
 000002BA			animarBarra PROC
				; Procedimiento para que la barra de cuadros parpadee intercambiando el simbolo ascii 176 y 177
				; cambia el caracter con el que se pinta la barra cada que es invocado
				;-----------------------------------------------------------------------------------------------------------
 000002BA  B8 0000009B		MOV eax, colores2
 000002BF  E8 00000000 E	CALL SetTextColor

 000002C4  66| B9 0050		MOV cx,80 ; hará un ciclo 40 veces pintando de a dos caracteres 176 o 177
 000002C8			L1:

 000002C8  BA 00000000 R		MOV edx, OFFSET CuadrosAscii
 000002CD  03 15 00000008 R		ADD edx, contadorBarra
 000002D3  E8 00000000 E		CALL	WriteString
 000002D8  83 3D 00000008 R		CMP contadorBarra, 6
	   06
 000002DF  7C 0C			JL menor6
 000002E1  C7 05 00000008 R			MOV contadorBarra, 0
	   00000000
 000002EB  EB 0C				JMP finsi
 000002ED				menor6:
 000002ED  FF 05 00000008 R			INC contadorBarra
 000002F3  FF 05 00000008 R			INC contadorBarra
 000002F9				finsi:

 000002F9  66| 49		DEC cx
 000002FB  75 CB		JNZ L1 ;fin cilo para pintar la barra
						
 000002FD  C3			RET
 000002FE			animarBarra ENDP


				;-----------------------------------------------------------------------------------------------------------
 000002FE			contadorEjec PROC
				;Muestra el número de veces que se ha ejecutado el programa
				;Solo se muestra después de la primera ejecución
				;-----------------------------------------------------------------------------------------------------------

 000002FE  83 3D 00000330 R	CMP contEjecuciones, 0
	   00
 00000305  74 3E		JE ceroEjec

				;muestra el número de veces que se ha ejecutado el programa
				mWrite "El programa se ha ejecutado "
 000057DD		     1		.data		
 000057DD 45 6C 20 70 72     1		??0004 BYTE "El programa se ha ejecutado ",0	
	   6F 67 72 61 6D
	   61 20 73 65 20
	   68 61 20 65 6A
	   65 63 75 74 61
	   64 6F 20 00
 00000307		     1		.code
 00000307  52		     1		push	edx
 00000308  BA 000057DD R     1		mov	edx,OFFSET ??0004
 0000030D  E8 00000000 E     1		call	WriteString
 00000312  5A		     1		pop	edx
 00000313  A1 00000330 R	MOV eax, contEjecuciones
 00000318  E8 00000000 E	CALL writeDec
 0000031D  83 3D 00000330 R	CMP contEjecuciones, 1
	   01
 00000324  75 0E		JNE noUno
				mWrite " vez"
 000057FA		     1		.data		
 000057FA 20 76 65 7A 00     1		??0005 BYTE " vez",0	
 00000326		     1		.code
 00000326  52		     1		push	edx
 00000327  BA 000057FA R     1		mov	edx,OFFSET ??0005
 0000032C  E8 00000000 E     1		call	WriteString
 00000331  5A		     1		pop	edx
 00000332  EB 0C		JMP todos
 00000334			noUno:
				mWrite " veces"
 000057FF		     1		.data		
 000057FF 20 76 65 63 65     1		??0006 BYTE " veces",0	
	   73 00
 00000334		     1		.code
 00000334  52		     1		push	edx
 00000335  BA 000057FF R     1		mov	edx,OFFSET ??0006
 0000033A  E8 00000000 E     1		call	WriteString
 0000033F  5A		     1		pop	edx
 00000340			todos:
 00000340  E8 00000000 E	CALL Crlf

 00000345			ceroEjec:

 00000345  FF 05 00000330 R	INC contEjecuciones

 0000034B  C3			RET
 0000034C			contadorEjec ENDP


				;-----------------------------------------------------------------------------------------------------------
 0000034C			mostrarDespedida PROC
				;Muestra el mensaje de despedida
				;-----------------------------------------------------------------------------------------------------------
 0000034C  E8 00000000 E	CALL Clrscr ; limpiar la pantalla

 00000351  E8 FFFFFEEC		call pintarBarrasIni
 00000356  C7 05 00000008 R	MOV contadorBarra, 0
	   00000000

 00000360  E8 00000000 E	CALL Clrscr

 00000365  E8 FFFFFF50		CALL animarBarra
 0000036A  E8 FFFFFF4B		CALL animarBarra

				;CALL Crlf

 0000036F  B8 0000009F		mov eax, colores3
 00000374  E8 00000000 E	call SetTextColor

 00000379  B9 00000004		MOV ecx, numLineasMsjDp
 0000037E  41			INC ecx

 0000037F  C7 05 00000334 R	MOV auxCiclos, 0
	   00000000

 00000389			CICLOFIN: ; en este ciclo se imprimen las líneas dentro de  las barras

 00000389  A1 00000334 R		MOV eax, auxCiclos

 0000038E  BA 00000004			MOV edx,4
 00000393  F7 E2			MUL edx ; multiplica el numero de la línea por 4 para el desplazamiento en memoria

 00000395  8B 90 00000278 R		MOV edx, [mensajeD+eax]
 0000039B  E8 00000000 E		CALL WriteString ;imprime la línea del mensaje
 000003A0  E8 00000000 E		CALL Crlf
					
 000003A5  FF 05 00000334 R		INC auxCiclos

 000003AB  E2 DC		LOOP CICLOFIN

 000003AD  E8 00000000 E	CALL Crlf

 000003B2  E8 FFFFFF03		CALL animarBarra
 000003B7  E8 FFFFFEFE		CALL animarBarra

 000003BC  C3			RET
 000003BD			mostrarDespedida ENDP


				;-----------------------------------------------------------------------------------------------------------
 000003BD			leerArchivo PROC
				;Carga el archivo y llama al metodo que ordena el vector
				;-----------------------------------------------------------------------------------------------------------
 000003BD  B8 0000009F		mov eax, colores3
 000003C2  E8 00000000 E	call SetTextColor

				;pide la ubicación del archivo y lo abre
				mWrite "Por favor ingrese la ruta del archivo que contiene los datos: "
 00005806		     1		.data		
 00005806 50 6F 72 20 66     1		??0007 BYTE "Por favor ingrese la ruta del archivo que contiene los datos: ",0	
	   61 76 6F 72 20
	   69 6E 67 72 65
	   73 65 20 6C 61
	   20 72 75 74 61
	   20 64 65 6C 20
	   61 72 63 68 69
	   76 6F 20 71 75
	   65 20 63 6F 6E
	   74 69 65 6E 65
	   20 6C 6F 73 20
	   64 61 74 6F 73
	   3A 20 00
 000003C7		     1		.code
 000003C7  52		     1		push	edx
 000003C8  BA 00005806 R     1		mov	edx,OFFSET ??0007
 000003CD  E8 00000000 E     1		call	WriteString
 000003D2  5A		     1		pop	edx
 000003D3  E8 00000000 E	CALL crlf

 000003D8			preguntaRuta:
 000003D8  BA 000004A6 R	MOV edx, OFFSET urlDatos
 000003DD  B9 00000104		MOV ecx, SIZEOF urlDatos
 000003E2  E8 00000000 E	CALL readString

 000003E7  BA 000004A6 R	MOV	edx,OFFSET urlDatos
 000003EC  E8 00000000 E	CALL OpenInputFile
 000003F1  A3 000005AA R	MOV	fileHandle, eax

				;revisa que se haya abierto correctamente el archivo
 000003F6  83 F8 FF		CMP	eax, INVALID_HANDLE_VALUE
 000003F9  75 0E		JNE	file_ok
				mWrite <"No se pudo abrir el archivo. Por favor ingrese una direcci",162,"n v",160,"lida",0dh,0ah>
 00005845		     1		.data		
 00005845 4E 6F 20 73 65     1		??0008 BYTE "No se pudo abrir el archivo. Por favor ingrese una direcci",162,"n v",160,"lida",0dh,0ah,0	
	   20 70 75 64 6F
	   20 61 62 72 69
	   72 20 65 6C 20
	   61 72 63 68 69
	   76 6F 2E 20 50
	   6F 72 20 66 61
	   76 6F 72 20 69
	   6E 67 72 65 73
	   65 20 75 6E 61
	   20 64 69 72 65
	   63 63 69 A2 6E
	   20 76 A0 6C 69
	   64 61 0D 0A 00
 000003FB		     1		.code
 000003FB  52		     1		push	edx
 000003FC  BA 00005845 R     1		mov	edx,OFFSET ??0008
 00000401  E8 00000000 E     1		call	WriteString
 00000406  5A		     1		pop	edx
 00000407  EB CF		JMP	preguntaRuta
 00000409			file_ok:

				;lee el archivo o sale si hay un error leyendo
 00000409  BA 00003E12 R	MOV	edx, OFFSET buferArchivo
 0000040E  B9 00001388		MOV	ecx, tamanoBufer
 00000413  E8 00000000 E	CALL ReadFromFile
 00000418  73 13		JNC	check_buffer_size
				mWrite <"Error leyendo el archivo. Por favor ingrese una direcci",162,"n v",160,"lida",0dh,0ah>
 0000588B		     1		.data		
 0000588B 45 72 72 6F 72     1		??0009 BYTE "Error leyendo el archivo. Por favor ingrese una direcci",162,"n v",160,"lida",0dh,0ah,0	
	   20 6C 65 79 65
	   6E 64 6F 20 65
	   6C 20 61 72 63
	   68 69 76 6F 2E
	   20 50 6F 72 20
	   66 61 76 6F 72
	   20 69 6E 67 72
	   65 73 65 20 75
	   6E 61 20 64 69
	   72 65 63 63 69
	   A2 6E 20 76 A0
	   6C 69 64 61 0D
	   0A 00
 0000041A		     1		.code
 0000041A  52		     1		push	edx
 0000041B  BA 0000588B R     1		mov	edx,OFFSET ??0009
 00000420  E8 00000000 E     1		call	WriteString
 00000425  5A		     1		pop	edx
 00000426  E8 00000000 E	CALL	WriteWindowsMsg
 0000042B  EB AB		JMP	preguntaRuta
					
 0000042D			check_buffer_size:
 0000042D  3D 00001388		CMP	eax, tamanoBufer
 00000432  72 0E		JB	buf_size_ok
				mWrite <"El archivo es demasiado extenso. Ingrese la direcci",162,"n de un archivo m",160,"s corto",0dh,0ah>
 000058CE		     1		.data		
 000058CE 45 6C 20 61 72     1		??000A BYTE "El archivo es demasiado extenso. Ingrese la direcci",162,"n de un archivo m",160,"s corto",0dh,0ah,0	
	   63 68 69 76 6F
	   20 65 73 20 64
	   65 6D 61 73 69
	   61 64 6F 20 65
	   78 74 65 6E 73
	   6F 2E 20 49 6E
	   67 72 65 73 65
	   20 6C 61 20 64
	   69 72 65 63 63
	   69 A2 6E 20 64
	   65 20 75 6E 20
	   61 72 63 68 69
	   76 6F 20 6D A0
	   73 20 63 6F 72
	   74 6F 0D 0A 00
 00000434		     1		.code
 00000434  52		     1		push	edx
 00000435  BA 000058CE R     1		mov	edx,OFFSET ??000A
 0000043A  E8 00000000 E     1		call	WriteString
 0000043F  5A		     1		pop	edx
 00000440  EB 96		JMP	preguntaRuta
					
 00000442			buf_size_ok:	
 00000442  C6 80 00003E12 R	MOV	buferArchivo[eax],0 ;terminación nula para el archivo. eax contiene la cantidad de caracteres leídos
	   00

				;cierra el handle
 00000449  A1 000005AA R	MOV	eax,fileHandle
 0000044E  E8 00000000 E	CALL CloseFile

				;se leen los números y se meten en el arreglo
 00000453  BE 00000000		MOV esi, 0
 00000458			leerNum:

					;reinicializa los valores de los auxiliares
 00000458  C7 05 000051B4 R		MOV saltoDeLinea, 0
	   00000000
 00000462  C7 05 000051A8 R		MOV coma, 0
	   00000000
 0000046C  C7 05 000051AC R		MOV contCicloDecimales, 0
	   00000000

					;carga el cero
 00000476  D9 EE			FLDZ
 00000478  DD 1D 000051A0 R		FSTP realActual

					;ciclo de lectura de caracteres
 0000047E  B9 00000050			MOV ecx, 80
					
 00000483				leerChar:

 00000483  B8 00000000				MOV eax, 0
 00000488  8A 86 00003E12 R			MOV al, buferArchivo[esi]
 0000048E  46					INC esi

						;si el archivo terminó, sale del ciclo
 0000048F  3C 00				CMP al, 0
 00000491  75 0F				JNE noFinArchivo
 00000493  C7 05 000051B8 R			MOV finArchivo, 1
	   00000001
 0000049D  E9 000000AE				JMP finNumero
 000004A2					noFinArchivo:

						;si hay cr o lf, aumenta saltoDeLinea y pasa al siguiente caracter
 000004A2  3C 0D				CMP al, 13
 000004A4  75 18				JNE noCr
 000004A6  FF 05 000051B4 R			INC saltoDeLinea
						;si ya se leyeron los dos, se pasa al siguiente número
 000004AC  83 3D 000051B4 R			CMP saltoDeLinea, 2
	   02
 000004B3  0F 84 00000097			JE finNumero
 000004B9  E9 00000088				JMP finChar
 000004BE					noCr:
 000004BE  3C 0A				CMP al, 10
 000004C0  75 11				JNE noLf
 000004C2  FF 05 000051B4 R			INC saltoDeLinea
						;si ya se leyeron los dos, se pasa al siguiente número
 000004C8  83 3D 000051B4 R			CMP saltoDeLinea, 2
	   02
 000004CF  74 7F				JE finNumero
 000004D1  EB 73				JMP finChar
 000004D3					noLf:
						
					
						;si hay una coma o un punto, activa el booleano para empezar a poner los decimales
 000004D3  3C 2C				CMP al, 44
 000004D5  75 0C				JNE noEsComa
 000004D7  C7 05 000051A8 R			MOV coma, 1
	   00000001
 000004E1  EB 63				JMP finChar
 000004E3					noEsComa:
 000004E3  3C 2E				CMP al, 46
 000004E5  75 0C				JNE noEsPunto
 000004E7  C7 05 000051A8 R			MOV coma, 1
	   00000001
 000004F1  EB 53				JMP finChar
 000004F3					noEsPunto:

						;convierte el caracter en el número que representa
 000004F3  83 E8 30				SUB eax, 48

						;guarda el valor en el auxiliar
 000004F6  A2 0000519B R			MOV datoActual, al
 000004FB  DB 05 0000519B R			FILD DWORD PTR datoActual

						;si coma es 0 (falso), multiplica por 10
 00000501  83 3D 000051A8 R			CMP coma, 0
	   00
 00000508  75 16				JNE decimales
 0000050A  DD 05 000051A0 R			FLD realActual
 00000510  DC 0D 000051C4 R			FMUL diez
 00000516  DE C1				FADD
 00000518  DD 1D 000051A0 R			FSTP realActual
 0000051E  EB 26				JMP finChar

						;si coma es 1 (verdadero), divide por 10
 00000520					decimales:
 00000520  FF 05 000051AC R			INC contCicloDecimales
 00000526  8B 1D 000051AC R			MOV ebx, contCicloDecimales
						;ciclo de división por 10 para llegar al valor correcto
 0000052C					cicloDiv:
 0000052C  DC 35 000051C4 R				FDIV diez
 00000532  4B					DEC ebx
 00000533  83 FB 00				CMP ebx, 0
 00000536  75 F4				JNE cicloDiv
 00000538  DD 05 000051A0 R			FLD realActual
 0000053E  DE C1				FADD
 00000540  DD 1D 000051A0 R			FSTP realActual
						
 00000546					finChar:
 00000546  49				DEC ecx
 00000547  83 F9 00			CMP ecx, 0
 0000054A  0F 85 FFFFFF33		JNE leerChar
 00000550				finNumero:
					
					;;;;;;;;;;;;;;para comprobar que lee bien
					;mwrite "final"
					;FLD realActual
					;CALL writeFloat
					;fstp realactual
					;CALL crlf
					;;;;;;;;;;;;;;;;

					;guarda el número en el array
 00000550  DD 05 000051A0 R		FLD realActual
 00000556  A1 000051B0 R		MOV eax, realesLeidos
 0000055B  DD 98 000005AE R		FSTP numeros[eax]
 00000561  FF 05 000051B0 R		INC realesLeidos

					;si llegó al final del archivo, sale
 00000567  83 3D 000051B8 R		CMP finArchivo, 1
	   01
 0000056E  74 10			JE finLectura

					;si no ha llegado al número máximo de reales que puede almacenar, sigue leyendo
 00000570  81 3D 000051B0 R		CMP realesLeidos, maxDatos
	   00000258
 0000057A  0F 8C FFFFFED8		JL leerNum
 00000580			finLectura:

 00000580  E8 00000255		CALL ordenar

 00000585			leerArchivo ENDP

				;-----------------------------------------------------------------------------------------------------------
 00000585			calcularEstadisticos PROC
				; Calcula los estadísticos
				;-----------------------------------------------------------------------------------------------------------


 00000585  E8 00000251		CALL calcMedia
 0000058A  E8 0000024D		CALL calcMediana
				;CALL calcModa
 0000058F  E8 00000249		CALL calcMediageometrica
 00000594  E8 00000245		CALL calcMediaarmonica
 00000599  E8 00000241		CALL calcPercentiles
 0000059E  E8 0000023D		CALL calcCuartiles
 000005A3  E8 00000239		CALL calcDeciles
 000005A8  E8 00000235		CALL calcMomentosOrigen
 000005AD  E8 00000231		CALL calcMomentosCentrales
 000005B2  E8 0000022D		CALL calcVarianza
 000005B7  E8 00000229		CALL calcDesvEstandar
 000005BC  E8 00000225		CALL calcCuasiVarianza
 000005C1  E8 00000221		CALL calcDesvMedia
 000005C6  E8 0000021D		CALL calcDesvMediana


 000005CB  C3			RET
 000005CC			calcularEstadisticos ENDP

				;-----------------------------------------------------------------------------------------------------------
 000005CC			pedirEstadisticos PROC
				;Pide al usuario ingresar los estadísticos que desea
				;-----------------------------------------------------------------------------------------------------------

 000005CC  E8 00000000 E	CALL clrscr
				mWrite <"Seleccione los estad",161,"sticos que desea calcular.",0dh,0ah>
 0000591E		     1		.data		
 0000591E 53 65 6C 65 63     1		??000B BYTE "Seleccione los estad",161,"sticos que desea calcular.",0dh,0ah,0	
	   63 69 6F 6E 65
	   20 6C 6F 73 20
	   65 73 74 61 64
	   A1 73 74 69 63
	   6F 73 20 71 75
	   65 20 64 65 73
	   65 61 20 63 61
	   6C 63 75 6C 61
	   72 2E 0D 0A 00
 000005D1		     1		.code
 000005D1  52		     1		push	edx
 000005D2  BA 0000591E R     1		mov	edx,OFFSET ??000B
 000005D7  E8 00000000 E     1		call	WriteString
 000005DC  5A		     1		pop	edx
 000005DD  BA 0000034C R	MOV edx, OFFSET stringEstadisticos
 000005E2  E8 00000000 E	CALL writeString

 000005E7			seleccionEstad:
 000005E7  E8 00000000 E	CALL crlf
				mWrite <"Escriba una lista separada por comas y presione enter. Ejemplo: 1,2,3",0dh,0ah>
 00005950		     1		.data		
 00005950 45 73 63 72 69     1		??000C BYTE "Escriba una lista separada por comas y presione enter. Ejemplo: 1,2,3",0dh,0ah,0	
	   62 61 20 75 6E
	   61 20 6C 69 73
	   74 61 20 73 65
	   70 61 72 61 64
	   61 20 70 6F 72
	   20 63 6F 6D 61
	   73 20 79 20 70
	   72 65 73 69 6F
	   6E 65 20 65 6E
	   74 65 72 2E 20
	   45 6A 65 6D 70
	   6C 6F 3A 20 31
	   2C 32 2C 33 0D
	   0A 00
 000005EC		     1		.code
 000005EC  52		     1		push	edx
 000005ED  BA 00005950 R     1		mov	edx,OFFSET ??000C
 000005F2  E8 00000000 E     1		call	WriteString
 000005F7  5A		     1		pop	edx

 000005F8  BA 000055DC R	MOV edx, OFFSET buferUsuario
 000005FD  B9 00000028		MOV ecx, LENGTHOF buferUsuario
 00000602  49			DEC ecx ;se deja el último caracter en 0 siempre
 00000603  E8 00000000 E	CALL readString

 00000608  8B C8		MOV ecx, eax
 0000060A  41			INC ecx

				;interpreta la cadena ingresada (en ecx está el tamaño de la cadena + 1)
 0000060B  BE 00000000		MOV esi, 0
 00000610  B8 00000000		MOV eax, 0
 00000615			cicloUsuario:
					;si el caracter leido es una coma o se llegó al final del búfer, 
					;mueve 1 a la posición correspondiente del array de booleanos
 00000615  80 BE 000055DC R		CMP buferUsuario[esi], 44
	   2C
 0000061C  75 15			JNE noComaUsu
 0000061E					comaUsu:
 0000061E  48					DEC eax
 0000061F  BA 00000004				MOV edx, 4
 00000624  F7 E2				MUL edx
 00000626  F7 90 00005604 R			NOT boolEstadisticos[eax]
 0000062C  B8 00000000				MOV eax, 0
 00000631  EB 20				JMP continueUsu
 00000633				noComaUsu:
 00000633  80 BE 000055DC R		CMP buferUsuario[esi], 0
	   00
 0000063A  74 E2			JE comaUsu

					;el número puede tener dos cifras. multiplica la primera por 10 y suma la siguiente
 0000063C  BB 00000000			MOV ebx, 0
 00000641  8A 9E 000055DC R		MOV bl, buferUsuario[esi]
 00000647  83 EB 30			SUB ebx, 48
 0000064A  BA 0000000A			MOV edx, 10
 0000064F  F7 E2			MUL edx
 00000651  03 C3			ADD eax, ebx

 00000653				continueUsu:
 00000653  46				INC esi
 00000654  E2 BF		LOOP cicloUsuario

 00000656  E8 00000000 E	CALL crlf
				mWrite <"Por favor confirme su selecci",162,"n. 1=si, 0=cambiar",0dh,0ah>
 00005998		     1		.data		
 00005998 50 6F 72 20 66     1		??000D BYTE "Por favor confirme su selecci",162,"n. 1=si, 0=cambiar",0dh,0ah,0	
	   61 76 6F 72 20
	   63 6F 6E 66 69
	   72 6D 65 20 73
	   75 20 73 65 6C
	   65 63 63 69 A2
	   6E 2E 20 31 3D
	   73 69 2C 20 30
	   3D 63 61 6D 62
	   69 61 72 0D 0A
	   00
 0000065B		     1		.code
 0000065B  52		     1		push	edx
 0000065C  BA 00005998 R     1		mov	edx,OFFSET ??000D
 00000661  E8 00000000 E     1		call	WriteString
 00000666  5A		     1		pop	edx
 00000667  E8 00000000 E	CALL readInt
 0000066C  83 F8 00		CMP eax, 0
 0000066F  75 11		JNE finSeleccion
				mWrite <"Indique los estad",161,"sticos que desea agregar o escriba nuevamente ",0dh,0ah,"los que desea quitar de la lista",0dh,0ah>
 000059CB		     1		.data		
 000059CB 49 6E 64 69 71     1		??000E BYTE "Indique los estad",161,"sticos que desea agregar o escriba nuevamente ",0dh,0ah,"los que desea quitar de la lista",0dh,0ah,0	
	   75 65 20 6C 6F
	   73 20 65 73 74
	   61 64 A1 73 74
	   69 63 6F 73 20
	   71 75 65 20 64
	   65 73 65 61 20
	   61 67 72 65 67
	   61 72 20 6F 20
	   65 73 63 72 69
	   62 61 20 6E 75
	   65 76 61 6D 65
	   6E 74 65 20 0D
	   0A 6C 6F 73 20
	   71 75 65 20 64
	   65 73 65 61 20
	   71 75 69 74 61
	   72 20 64 65 20
	   6C 61 20 6C 69
	   73 74 61 0D 0A
	   00
 00000671		     1		.code
 00000671  52		     1		push	edx
 00000672  BA 000059CB R     1		mov	edx,OFFSET ??000E
 00000677  E8 00000000 E     1		call	WriteString
 0000067C  5A		     1		pop	edx
 0000067D  E9 FFFFFF65		JMP seleccionEstad

 00000682			finSeleccion:

 00000682  C3			RET
 00000683			pedirEstadisticos ENDP

				;-----------------------------------------------------------------------------------------------------------
 00000683			mostrarEstadisticosSelec PROC
				;Muestra los estadísticos seleccionados por el usuario
				;-----------------------------------------------------------------------------------------------------------

				;si el estadístico n fue marcado (está en 1), lo imprime. De lo contrario, pasa al siguiente
 00000683  83 3D 00005604 R	CMP boolEstadisticos, -1
	   FF
 0000068A  75 0C		JNE pasa2
					mwrite "1-"
 00005A30		     1		.data		
 00005A30 31 2D 00	     1		??000F BYTE "1-",0	
 0000068C		     1		.code
 0000068C  52		     1		push	edx
 0000068D  BA 00005A30 R     1		mov	edx,OFFSET ??000F
 00000692  E8 00000000 E     1		call	WriteString
 00000697  5A		     1		pop	edx
 00000698			pasa2:
 00000698  83 3D 00005608 R	CMP boolEstadisticos[4], -1
	   FF
 0000069F  75 0C		JNE pasa3
					mwrite "2-"
 00005A33		     1		.data		
 00005A33 32 2D 00	     1		??0010 BYTE "2-",0	
 000006A1		     1		.code
 000006A1  52		     1		push	edx
 000006A2  BA 00005A33 R     1		mov	edx,OFFSET ??0010
 000006A7  E8 00000000 E     1		call	WriteString
 000006AC  5A		     1		pop	edx
 000006AD			pasa3:
 000006AD  83 3D 0000560C R	CMP boolEstadisticos[8], -1
	   FF
 000006B4  75 0C		JNE pasa4
					mwrite "3-"
 00005A36		     1		.data		
 00005A36 33 2D 00	     1		??0011 BYTE "3-",0	
 000006B6		     1		.code
 000006B6  52		     1		push	edx
 000006B7  BA 00005A36 R     1		mov	edx,OFFSET ??0011
 000006BC  E8 00000000 E     1		call	WriteString
 000006C1  5A		     1		pop	edx
 000006C2			pasa4:
 000006C2  83 3D 00005610 R	CMP boolEstadisticos[12], -1
	   FF
 000006C9  75 0C		JNE pasa5
					mwrite "4-"
 00005A39		     1		.data		
 00005A39 34 2D 00	     1		??0012 BYTE "4-",0	
 000006CB		     1		.code
 000006CB  52		     1		push	edx
 000006CC  BA 00005A39 R     1		mov	edx,OFFSET ??0012
 000006D1  E8 00000000 E     1		call	WriteString
 000006D6  5A		     1		pop	edx
 000006D7			pasa5:
 000006D7  83 3D 00005614 R	CMP boolEstadisticos[16], -1
	   FF
 000006DE  75 0C		JNE pasa6
					mwrite "5-"
 00005A3C		     1		.data		
 00005A3C 35 2D 00	     1		??0013 BYTE "5-",0	
 000006E0		     1		.code
 000006E0  52		     1		push	edx
 000006E1  BA 00005A3C R     1		mov	edx,OFFSET ??0013
 000006E6  E8 00000000 E     1		call	WriteString
 000006EB  5A		     1		pop	edx
 000006EC			pasa6:
 000006EC  83 3D 00005618 R	CMP boolEstadisticos[20], -1
	   FF
 000006F3  75 0C		JNE pasa7
					mwrite "6-"
 00005A3F		     1		.data		
 00005A3F 36 2D 00	     1		??0014 BYTE "6-",0	
 000006F5		     1		.code
 000006F5  52		     1		push	edx
 000006F6  BA 00005A3F R     1		mov	edx,OFFSET ??0014
 000006FB  E8 00000000 E     1		call	WriteString
 00000700  5A		     1		pop	edx
 00000701			pasa7:
 00000701  83 3D 0000561C R	CMP boolEstadisticos[24], -1
	   FF
 00000708  75 0C		JNE pasa8
					mwrite "7-"
 00005A42		     1		.data		
 00005A42 37 2D 00	     1		??0015 BYTE "7-",0	
 0000070A		     1		.code
 0000070A  52		     1		push	edx
 0000070B  BA 00005A42 R     1		mov	edx,OFFSET ??0015
 00000710  E8 00000000 E     1		call	WriteString
 00000715  5A		     1		pop	edx
 00000716			pasa8:
 00000716  83 3D 00005620 R	CMP boolEstadisticos[28], -1
	   FF
 0000071D  75 0C		JNE pasa9
					mwrite "8-"
 00005A45		     1		.data		
 00005A45 38 2D 00	     1		??0016 BYTE "8-",0	
 0000071F		     1		.code
 0000071F  52		     1		push	edx
 00000720  BA 00005A45 R     1		mov	edx,OFFSET ??0016
 00000725  E8 00000000 E     1		call	WriteString
 0000072A  5A		     1		pop	edx
 0000072B			pasa9:
 0000072B  83 3D 00005624 R	CMP boolEstadisticos[32], -1
	   FF
 00000732  75 0C		JNE pasa10
					mwrite "9-"
 00005A48		     1		.data		
 00005A48 39 2D 00	     1		??0017 BYTE "9-",0	
 00000734		     1		.code
 00000734  52		     1		push	edx
 00000735  BA 00005A48 R     1		mov	edx,OFFSET ??0017
 0000073A  E8 00000000 E     1		call	WriteString
 0000073F  5A		     1		pop	edx
 00000740			pasa10:
 00000740  83 3D 00005628 R	CMP boolEstadisticos[36], -1
	   FF
 00000747  75 0C		JNE pasa11
					mwrite "10-"
 00005A4B		     1		.data		
 00005A4B 31 30 2D 00	     1		??0018 BYTE "10-",0	
 00000749		     1		.code
 00000749  52		     1		push	edx
 0000074A  BA 00005A4B R     1		mov	edx,OFFSET ??0018
 0000074F  E8 00000000 E     1		call	WriteString
 00000754  5A		     1		pop	edx
 00000755			pasa11:
 00000755  83 3D 0000562C R	CMP boolEstadisticos[40], -1
	   FF
 0000075C  75 0C		JNE pasa12
					mwrite "11-"
 00005A4F		     1		.data		
 00005A4F 31 31 2D 00	     1		??0019 BYTE "11-",0	
 0000075E		     1		.code
 0000075E  52		     1		push	edx
 0000075F  BA 00005A4F R     1		mov	edx,OFFSET ??0019
 00000764  E8 00000000 E     1		call	WriteString
 00000769  5A		     1		pop	edx
 0000076A			pasa12:
 0000076A  83 3D 00005630 R	CMP boolEstadisticos[44], -1
	   FF
 00000771  75 0C		JNE pasa13
					mwrite "12-"
 00005A53		     1		.data		
 00005A53 31 32 2D 00	     1		??001A BYTE "12-",0	
 00000773		     1		.code
 00000773  52		     1		push	edx
 00000774  BA 00005A53 R     1		mov	edx,OFFSET ??001A
 00000779  E8 00000000 E     1		call	WriteString
 0000077E  5A		     1		pop	edx
 0000077F			pasa13:
 0000077F  83 3D 00005634 R	CMP boolEstadisticos[48], -1
	   FF
 00000786  75 0C		JNE pasa14
					mwrite "13-"
 00005A57		     1		.data		
 00005A57 31 33 2D 00	     1		??001B BYTE "13-",0	
 00000788		     1		.code
 00000788  52		     1		push	edx
 00000789  BA 00005A57 R     1		mov	edx,OFFSET ??001B
 0000078E  E8 00000000 E     1		call	WriteString
 00000793  5A		     1		pop	edx
 00000794			pasa14:
 00000794  83 3D 00005638 R	CMP boolEstadisticos[52], -1
	   FF
 0000079B  75 0C		JNE pasa15
					mwrite "14-"
 00005A5B		     1		.data		
 00005A5B 31 34 2D 00	     1		??001C BYTE "14-",0	
 0000079D		     1		.code
 0000079D  52		     1		push	edx
 0000079E  BA 00005A5B R     1		mov	edx,OFFSET ??001C
 000007A3  E8 00000000 E     1		call	WriteString
 000007A8  5A		     1		pop	edx
 000007A9			pasa15:
 000007A9  83 3D 0000563C R	CMP boolEstadisticos[56], -1
	   FF
 000007B0  75 0C		JNE pasaFin
					mwrite "15"
 00005A5F		     1		.data		
 00005A5F 31 35 00	     1		??001D BYTE "15",0	
 000007B2		     1		.code
 000007B2  52		     1		push	edx
 000007B3  BA 00005A5F R     1		mov	edx,OFFSET ??001D
 000007B8  E8 00000000 E     1		call	WriteString
 000007BD  5A		     1		pop	edx
 000007BE			pasaFin:

				;reinicializa el vector de booleanos
 000007BE  B9 0000000F		MOV ecx, 15
 000007C3  BE 00000000		MOV esi, 0
 000007C8			ponerCeroSiguiente:
 000007C8  C7 86 00005604 R		MOV boolEstadisticos[esi], 0
	   00000000
 000007D2  83 C6 04			ADD esi, 4
 000007D5  E2 F1		LOOP ponerCeroSiguiente
 000007D7  C3			RET
 000007D8			mostrarEstadisticosSelec ENDP

				;-----------------------------------------------------------------------------------------------------------
 000007D8			imprimirDato PROC
				;Muestra un único dato
				;-----------------------------------------------------------------------------------------------------------

 000007D8  C3			RET
 000007D9			imprimirDato ENDP

				;-----------------------------------------------------------------------------------------------------------
 000007D9			imprimirArreglo PROC
				;Muestra un arreglo de datos
				;-----------------------------------------------------------------------------------------------------------

 000007D9  C3			RET
 000007DA			imprimirArreglo ENDP

				;-----------------------------------------------------------------------------------------------------------
 000007DA			ordenar PROC
				;Ordena el vector y calcula las frecuencias
				;-----------------------------------------------------------------------------------------------------------

 000007DA  C3			RET
 000007DB			ordenar ENDP

				;-----------------------------------------------------------------------------------------------------------
 000007DB			calcMedia PROC
				;Calcula el estadístico
				;-----------------------------------------------------------------------------------------------------------

 000007DB  C3			RET
 000007DC			calcMedia ENDP

				;-----------------------------------------------------------------------------------------------------------
 000007DC			calcMediana PROC
				;Calcula el estadístico
				;-----------------------------------------------------------------------------------------------------------

 000007DC  C3			RET
 000007DD			calcMediana ENDP

				;-----------------------------------------------------------------------------------------------------------
 000007DD			calcMediageometrica PROC
				;Calcula el estadístico
				;-----------------------------------------------------------------------------------------------------------

 000007DD  C3			RET
 000007DE			calcMediageometrica ENDP

				;-----------------------------------------------------------------------------------------------------------
 000007DE			calcMediaarmonica PROC
				;Calcula el estadístico
				;-----------------------------------------------------------------------------------------------------------

 000007DE  C3			RET
 000007DF			calcMediaarmonica ENDP

				;-----------------------------------------------------------------------------------------------------------
 000007DF			calcPercentiles PROC
				;Calcula el estadístico
				;-----------------------------------------------------------------------------------------------------------

 000007DF  C3			RET
 000007E0			calcPercentiles ENDP

				;-----------------------------------------------------------------------------------------------------------
 000007E0			calcCuartiles PROC
				;Calcula el estadístico
				;-----------------------------------------------------------------------------------------------------------

 000007E0  C3			RET
 000007E1			calcCuartiles ENDP

				;-----------------------------------------------------------------------------------------------------------
 000007E1			calcDeciles PROC
				;Calcula el estadístico
				;-----------------------------------------------------------------------------------------------------------

 000007E1  C3			RET
 000007E2			calcDeciles ENDP

				;-----------------------------------------------------------------------------------------------------------
 000007E2			calcMomentosOrigen PROC
				;Calcula el estadístico
				;-----------------------------------------------------------------------------------------------------------

 000007E2  C3			RET
 000007E3			calcMomentosOrigen ENDP

				;-----------------------------------------------------------------------------------------------------------
 000007E3			calcMomentosCentrales PROC
				;Calcula el estadístico
				;-----------------------------------------------------------------------------------------------------------

 000007E3  C3			RET
 000007E4			calcMomentosCentrales ENDP

				;-----------------------------------------------------------------------------------------------------------
 000007E4			calcVarianza PROC
				;Calcula el estadístico
				;-----------------------------------------------------------------------------------------------------------

 000007E4  C3			RET
 000007E5			calcVarianza ENDP

				;-----------------------------------------------------------------------------------------------------------
 000007E5			calcDesvEstandar PROC
				;Calcula el estadístico
				;-----------------------------------------------------------------------------------------------------------

 000007E5  C3			RET
 000007E6			calcDesvEstandar ENDP

				;-----------------------------------------------------------------------------------------------------------
 000007E6			calcCuasiVarianza PROC
				;Calcula el estadístico
				;-----------------------------------------------------------------------------------------------------------

 000007E6  C3			RET
 000007E7			calcCuasiVarianza ENDP

				;-----------------------------------------------------------------------------------------------------------
 000007E7			calcDesvMedia PROC
				;Calcula el estadístico
				;-----------------------------------------------------------------------------------------------------------

 000007E7  C3			RET
 000007E8			calcDesvMedia ENDP

				;-----------------------------------------------------------------------------------------------------------
 000007E8			calcDesvMediana PROC
				;Calcula el estadístico
				;-----------------------------------------------------------------------------------------------------------

 000007E8  C3			RET
 000007E9			calcDesvMediana ENDP

				;fin del programa
				END main
Microsoft (R) Macro Assembler Version 10.00.30319.01	    06/10/14 19:45:12
ESTADÍSTICAS						(main.asm  Symbols 2 - 1




Macros:

                N a m e                 Type

IsDefined  . . . . . . . . . . .	Func
Startup  . . . . . . . . . . . .	Proc
mDumpMem . . . . . . . . . . . .	Proc
mDump  . . . . . . . . . . . . .	Proc
mGotoxy  . . . . . . . . . . . .	Proc
mReadString  . . . . . . . . . .	Proc
mShowRegister  . . . . . . . . .	Proc
mShow  . . . . . . . . . . . . .	Proc
mWriteLn . . . . . . . . . . . .	Proc
mWriteSpace  . . . . . . . . . .	Proc
mWriteString . . . . . . . . . .	Proc
mWrite . . . . . . . . . . . . .	Proc


Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Types:

                N a m e                  Size     Attr

PTRREAL8 . . . . . . . . . . . .	 00000004     Near32 PTR QWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00000400 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00005A62 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000007E9 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
animarBarra  . . . . . . . . . .	P Near	 000002BA _TEXT	Length= 00000044 Public STDCALL
  L1 . . . . . . . . . . . . . .	L Near	 000002C8 _TEXT	
  menor6 . . . . . . . . . . . .	L Near	 000002ED _TEXT	
  finsi  . . . . . . . . . . . .	L Near	 000002F9 _TEXT	
calcCuartiles  . . . . . . . . .	P Near	 000007E0 _TEXT	Length= 00000001 Public STDCALL
calcCuasiVarianza  . . . . . . .	P Near	 000007E6 _TEXT	Length= 00000001 Public STDCALL
calcDeciles  . . . . . . . . . .	P Near	 000007E1 _TEXT	Length= 00000001 Public STDCALL
calcDesvEstandar . . . . . . . .	P Near	 000007E5 _TEXT	Length= 00000001 Public STDCALL
calcDesvMediana  . . . . . . . .	P Near	 000007E8 _TEXT	Length= 00000001 Public STDCALL
calcDesvMedia  . . . . . . . . .	P Near	 000007E7 _TEXT	Length= 00000001 Public STDCALL
calcMediaarmonica  . . . . . . .	P Near	 000007DE _TEXT	Length= 00000001 Public STDCALL
calcMediageometrica  . . . . . .	P Near	 000007DD _TEXT	Length= 00000001 Public STDCALL
calcMediana  . . . . . . . . . .	P Near	 000007DC _TEXT	Length= 00000001 Public STDCALL
calcMedia  . . . . . . . . . . .	P Near	 000007DB _TEXT	Length= 00000001 Public STDCALL
calcMomentosCentrales  . . . . .	P Near	 000007E3 _TEXT	Length= 00000001 Public STDCALL
calcMomentosOrigen . . . . . . .	P Near	 000007E2 _TEXT	Length= 00000001 Public STDCALL
calcPercentiles  . . . . . . . .	P Near	 000007DF _TEXT	Length= 00000001 Public STDCALL
calcVarianza . . . . . . . . . .	P Near	 000007E4 _TEXT	Length= 00000001 Public STDCALL
calcularEstadisticos . . . . . .	P Near	 00000585 _TEXT	Length= 00000047 Public STDCALL
cargarMensaje  . . . . . . . . .	P Near	 000000D0 _TEXT	Length= 000000BF Public STDCALL
contadorEjec . . . . . . . . . .	P Near	 000002FE _TEXT	Length= 0000004E Public STDCALL
  noUno  . . . . . . . . . . . .	L Near	 00000334 _TEXT	
  todos  . . . . . . . . . . . .	L Near	 00000340 _TEXT	
  ceroEjec . . . . . . . . . . .	L Near	 00000345 _TEXT	
imprimirArreglo  . . . . . . . .	P Near	 000007D9 _TEXT	Length= 00000001 Public STDCALL
imprimirDato . . . . . . . . . .	P Near	 000007D8 _TEXT	Length= 00000001 Public STDCALL
leerArchivo  . . . . . . . . . .	P Near	 000003BD _TEXT	Length= 000001C8 Public STDCALL
  preguntaRuta . . . . . . . . .	L Near	 000003D8 _TEXT	
  file_ok  . . . . . . . . . . .	L Near	 00000409 _TEXT	
  check_buffer_size  . . . . . .	L Near	 0000042D _TEXT	
  buf_size_ok  . . . . . . . . .	L Near	 00000442 _TEXT	
  leerNum  . . . . . . . . . . .	L Near	 00000458 _TEXT	
  leerChar . . . . . . . . . . .	L Near	 00000483 _TEXT	
  noFinArchivo . . . . . . . . .	L Near	 000004A2 _TEXT	
  noCr . . . . . . . . . . . . .	L Near	 000004BE _TEXT	
  noLf . . . . . . . . . . . . .	L Near	 000004D3 _TEXT	
  noEsComa . . . . . . . . . . .	L Near	 000004E3 _TEXT	
  noEsPunto  . . . . . . . . . .	L Near	 000004F3 _TEXT	
  decimales  . . . . . . . . . .	L Near	 00000520 _TEXT	
  cicloDiv . . . . . . . . . . .	L Near	 0000052C _TEXT	
  finChar  . . . . . . . . . . .	L Near	 00000546 _TEXT	
  finNumero  . . . . . . . . . .	L Near	 00000550 _TEXT	
  finLectura . . . . . . . . . .	L Near	 00000580 _TEXT	
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 000000D0 Public STDCALL
  inicio . . . . . . . . . . . .	L Near	 0000001C _TEXT	
  ejec . . . . . . . . . . . . .	L Near	 0000003F _TEXT	
mostrarDespedida . . . . . . . .	P Near	 0000034C _TEXT	Length= 00000071 Public STDCALL
  CICLOFIN . . . . . . . . . . .	L Near	 00000389 _TEXT	
mostrarEstadisticosSelec . . . .	P Near	 00000683 _TEXT	Length= 00000155 Public STDCALL
  pasa2  . . . . . . . . . . . .	L Near	 00000698 _TEXT	
  pasa3  . . . . . . . . . . . .	L Near	 000006AD _TEXT	
  pasa4  . . . . . . . . . . . .	L Near	 000006C2 _TEXT	
  pasa5  . . . . . . . . . . . .	L Near	 000006D7 _TEXT	
  pasa6  . . . . . . . . . . . .	L Near	 000006EC _TEXT	
  pasa7  . . . . . . . . . . . .	L Near	 00000701 _TEXT	
  pasa8  . . . . . . . . . . . .	L Near	 00000716 _TEXT	
  pasa9  . . . . . . . . . . . .	L Near	 0000072B _TEXT	
  pasa10 . . . . . . . . . . . .	L Near	 00000740 _TEXT	
  pasa11 . . . . . . . . . . . .	L Near	 00000755 _TEXT	
  pasa12 . . . . . . . . . . . .	L Near	 0000076A _TEXT	
  pasa13 . . . . . . . . . . . .	L Near	 0000077F _TEXT	
  pasa14 . . . . . . . . . . . .	L Near	 00000794 _TEXT	
  pasa15 . . . . . . . . . . . .	L Near	 000007A9 _TEXT	
  pasaFin  . . . . . . . . . . .	L Near	 000007BE _TEXT	
  ponerCeroSiguiente . . . . . .	L Near	 000007C8 _TEXT	
mostrarMensaje . . . . . . . . .	P Near	 0000018F _TEXT	Length= 000000B3 Public STDCALL
  CICLO  . . . . . . . . . . . .	L Near	 000001B7 _TEXT	
  MENOR  . . . . . . . . . . . .	L Near	 000001E8 _TEXT	
  NoMENOR  . . . . . . . . . . .	L Near	 000001EE _TEXT	
  MEN  . . . . . . . . . . . . .	L Near	 00000205 _TEXT	
  NoMEN  . . . . . . . . . . . .	L Near	 0000020B _TEXT	
  menor6 . . . . . . . . . . . .	L Near	 00000235 _TEXT	
  finsi  . . . . . . . . . . . .	L Near	 00000241 _TEXT	
ordenar  . . . . . . . . . . . .	P Near	 000007DA _TEXT	Length= 00000001 Public STDCALL
pedirEstadisticos  . . . . . . .	P Near	 000005CC _TEXT	Length= 000000B7 Public STDCALL
  seleccionEstad . . . . . . . .	L Near	 000005E7 _TEXT	
  cicloUsuario . . . . . . . . .	L Near	 00000615 _TEXT	
  comaUsu  . . . . . . . . . . .	L Near	 0000061E _TEXT	
  noComaUsu  . . . . . . . . . .	L Near	 00000633 _TEXT	
  continueUsu  . . . . . . . . .	L Near	 00000653 _TEXT	
  finSeleccion . . . . . . . . .	L Near	 00000682 _TEXT	
pintarBarrasIni  . . . . . . . .	P Near	 00000242 _TEXT	Length= 00000033 Public STDCALL
pintarBarra  . . . . . . . . . .	P Near	 00000275 _TEXT	Length= 00000045 Public STDCALL
  CiloImprimir . . . . . . . . .	L Near	 00000284 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

??0000 . . . . . . . . . . . . .	Byte	 0000567C _DATA	
??0001 . . . . . . . . . . . . .	Byte	 000056F1 _DATA	
??0002 . . . . . . . . . . . . .	Byte	 0000574E _DATA	
??0003 . . . . . . . . . . . . .	Byte	 000057AB _DATA	
??0004 . . . . . . . . . . . . .	Byte	 000057DD _DATA	
??0005 . . . . . . . . . . . . .	Byte	 000057FA _DATA	
??0006 . . . . . . . . . . . . .	Byte	 000057FF _DATA	
??0007 . . . . . . . . . . . . .	Byte	 00005806 _DATA	
??0008 . . . . . . . . . . . . .	Byte	 00005845 _DATA	
??0009 . . . . . . . . . . . . .	Byte	 0000588B _DATA	
??000A . . . . . . . . . . . . .	Byte	 000058CE _DATA	
??000B . . . . . . . . . . . . .	Byte	 0000591E _DATA	
??000C . . . . . . . . . . . . .	Byte	 00005950 _DATA	
??000D . . . . . . . . . . . . .	Byte	 00005998 _DATA	
??000E . . . . . . . . . . . . .	Byte	 000059CB _DATA	
??000F . . . . . . . . . . . . .	Byte	 00005A30 _DATA	
??0010 . . . . . . . . . . . . .	Byte	 00005A33 _DATA	
??0011 . . . . . . . . . . . . .	Byte	 00005A36 _DATA	
??0012 . . . . . . . . . . . . .	Byte	 00005A39 _DATA	
??0013 . . . . . . . . . . . . .	Byte	 00005A3C _DATA	
??0014 . . . . . . . . . . . . .	Byte	 00005A3F _DATA	
??0015 . . . . . . . . . . . . .	Byte	 00005A42 _DATA	
??0016 . . . . . . . . . . . . .	Byte	 00005A45 _DATA	
??0017 . . . . . . . . . . . . .	Byte	 00005A48 _DATA	
??0018 . . . . . . . . . . . . .	Byte	 00005A4B _DATA	
??0019 . . . . . . . . . . . . .	Byte	 00005A4F _DATA	
??001A . . . . . . . . . . . . .	Byte	 00005A53 _DATA	
??001B . . . . . . . . . . . . .	Byte	 00005A57 _DATA	
??001C . . . . . . . . . . . . .	Byte	 00005A5B _DATA	
??001D . . . . . . . . . . . . .	Byte	 00005A5F _DATA	
@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
CuadrosAscii . . . . . . . . . .	Byte	 00000000 _DATA	
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
auxCiclos  . . . . . . . . . . .	DWord	 00000334 _DATA	
auxSumatoria . . . . . . . . . .	QWord	 000051BC _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
boolEstadisticos . . . . . . . .	DWord	 00005604 _DATA	
brown  . . . . . . . . . . . . .	Number	 00000006h   
buferArchivo . . . . . . . . . .	Byte	 00003E12 _DATA	
buferUsuario . . . . . . . . . .	Byte	 000055DC _DATA	
cantDatosDistintos . . . . . . .	DWord	 00003E0A _DATA	
cantDatos  . . . . . . . . . . .	DWord	 00003E06 _DATA	
colores1 . . . . . . . . . . . .	Number	 000000F9h   
colores2 . . . . . . . . . . . .	Number	 0000009Bh   
colores3 . . . . . . . . . . . .	Number	 0000009Fh   
coma . . . . . . . . . . . . . .	DWord	 000051A8 _DATA	
contCicloDecimales . . . . . . .	DWord	 000051AC _DATA	
contEjecuciones  . . . . . . . .	DWord	 00000330 _DATA	
contMensaje  . . . . . . . . . .	Byte	 0000032F _DATA	
contadorBarra  . . . . . . . . .	DWord	 00000008 _DATA	
contadorMensaje  . . . . . . . .	DWord	 0000032B _DATA	
cuartiles  . . . . . . . . . . .	QWord	 0000551C _DATA	
cuasiVarianza  . . . . . . . . .	QWord	 000055BC _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
datoActual . . . . . . . . . . .	Byte	 0000519B _DATA	
deciles  . . . . . . . . . . . .	QWord	 00005544 _DATA	
desvEstandar . . . . . . . . . .	QWord	 000055B4 _DATA	
desvMediana  . . . . . . . . . .	QWord	 000055CC _DATA	
desvMedia  . . . . . . . . . . .	QWord	 000055C4 _DATA	
diez . . . . . . . . . . . . . .	QWord	 000051C4 _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
fileHandle . . . . . . . . . . .	DWord	 000005AA _DATA	
finArchivo . . . . . . . . . . .	DWord	 000051B8 _DATA	
frecuenciaMax  . . . . . . . . .	DWord	 00003E0E _DATA	
frecuencias  . . . . . . . . . .	QWord	 00002B3E _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
maxDatos . . . . . . . . . . . .	Number	 00000258h   
mediaarmonica  . . . . . . . . .	QWord	 000051EC _DATA	
mediageometrica  . . . . . . . .	QWord	 000051E4 _DATA	
mediana  . . . . . . . . . . . .	QWord	 000051DC _DATA	
media  . . . . . . . . . . . . .	QWord	 000051D4 _DATA	
mensajeBienvenida10  . . . . . .	Byte	 00000180 _DATA	
mensajeBienvenida11  . . . . . .	Byte	 000001BD _DATA	
mensajeBienvenida12  . . . . . .	Byte	 000001F9 _DATA	
mensajeBienvenida13  . . . . . .	Byte	 0000022F _DATA	
mensajeBienvenida14  . . . . . .	Byte	 00000276 _DATA	
mensajeBienvenida1 . . . . . . .	Byte	 00000044 _DATA	
mensajeBienvenida2 . . . . . . .	Byte	 00000046 _DATA	
mensajeBienvenida3 . . . . . . .	Byte	 00000085 _DATA	
mensajeBienvenida4 . . . . . . .	Byte	 00000087 _DATA	
mensajeBienvenida5 . . . . . . .	Byte	 000000C1 _DATA	
mensajeBienvenida6 . . . . . . .	Byte	 000000C3 _DATA	
mensajeBienvenida7 . . . . . . .	Byte	 000000FD _DATA	
mensajeBienvenida8 . . . . . . .	Byte	 0000013C _DATA	
mensajeBienvenida9 . . . . . . .	Byte	 0000017E _DATA	
mensajeDespedida1  . . . . . . .	Byte	 000002B0 _DATA	
mensajeDespedida2  . . . . . . .	Byte	 000002B2 _DATA	
mensajeDespedida3  . . . . . . .	Byte	 000002EC _DATA	
mensajeDespedida4  . . . . . . .	Byte	 000002EE _DATA	
mensajeDespedida5  . . . . . . .	Byte	 00000329 _DATA	
mensajeD . . . . . . . . . . . .	DWord	 00000278 _DATA	
mensaje  . . . . . . . . . . . .	DWord	 0000000C _DATA	
momentosCentrales  . . . . . . .	QWord	 000055A4 _DATA	
momentosOrigen . . . . . . . . .	QWord	 0000559C _DATA	
numLineasMsjBv . . . . . . . . .	Number	 0000000Dh   
numLineasMsjDp . . . . . . . . .	Number	 00000004h   
numerosDistintos . . . . . . . .	QWord	 00001876 _DATA	
numeros  . . . . . . . . . . . .	QWord	 000005AE _DATA	
ordenMomCent . . . . . . . . . .	DWord	 000055D8 _DATA	
ordenMomOrig . . . . . . . . . .	DWord	 000055D4 _DATA	
percentiles  . . . . . . . . . .	QWord	 000051F4 _DATA	
ptrEstaadisticos . . . . . . . .	DWord	 00005640 _DATA	
realActual . . . . . . . . . . .	QWord	 000051A0 _DATA	
realesLeidos . . . . . . . . . .	DWord	 000051B0 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
relleno  . . . . . . . . . . . .	DWord	 0000519C _DATA	
saltoDeLinea . . . . . . . . . .	DWord	 000051B4 _DATA	
stringEstadisticos . . . . . . .	Byte	 0000034C _DATA	
tamanoBufer  . . . . . . . . . .	Number	 00001388h   
tiempoEspera . . . . . . . . . .	Word	 00000348 _DATA	
unDecimo . . . . . . . . . . . .	QWord	 000051CC _DATA	
urlDatos . . . . . . . . . . . .	Byte	 000004A6 _DATA	
varianza . . . . . . . . . . . .	QWord	 000055AC _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
