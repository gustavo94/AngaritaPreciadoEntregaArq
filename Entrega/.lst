Microsoft (R) Macro Assembler Version 10.00.30319.01	    06/08/14 00:48:42
ESTADÍSTICAS						(main.asm  Page 1 - 1


				TITLE ESTADÍSTICAS						(main.asm)

				; Descripción:
				; Este software fue desarrollado para la clase de Arquitectura de Computadores 2014-I
				; Esta diseñado para generar diferentes estadísticas a partir de datos contenidos en un archivo de texto

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 
				INCLUDE Macros.inc
			      C .NOLIST
			      C .LIST
			      C 

				PTRREAL8 TYPEDEF PTR REAL8 ;tipo de datos para punteros a real8

 00000000			.DATA

				;código de la tilde: a=160, e=130, i=161, o=162, u=163

				;decoración del mensaje de bienvenida
 00000000 DB 00 B2 00 B1	CuadrosAscii BYTE 219,0,178,0,177,0," ",0;176,0,177,0,178,0,219,0
	   00 20 00
				;CuadrosAscii BYTE 220,0,219,0,223,0,219,0;176,0,177,0,178,0,219,0  ;219,0,219,0,178,0,177,0,176,0
				;CuadrosAscii BYTE 220,0,219,0,223,0,219,0,220,0,219,0,223,0,220,0
 00000008 00000000		contadorBarra DWORD 0 ; contador para animaciones

				;líneas del mensaje de bienvenida 
				;con espacios en blanco para que cada mensaje se vea centrado
 0000000C  0000000E [		mensaje DWORD 14 DUP(0)	; array que tiene la dirección donde empieza cada una de las líneas del mensaje
	    00000000
	   ]
 = 0000000D			numLineasMsjBv = 13
 00000044 20 00			mensajeBienvenida1 BYTE			       " ",0																					;1 caracter
 00000046  00000011 [		mensajeBienvenida2 BYTE			       17 DUP(" "),"Bienvenido al programa de estudio estad",161d,"stico",0						;45 caracteres
	    20
	   ] 42 69 65 6E
	   76 65 6E 69 64
	   6F 20 61 6C 20
	   70 72 6F 67 72
	   61 6D 61 20 64
	   65 20 65 73 74
	   75 64 69 6F 20
	   65 73 74 61 64
	   A1 73 74 69 63
	   6F 00
 00000085 20 00			mensajeBienvenida3 BYTE			       " ",0																					;1 caracter
 00000087  00000017 [		mensajeBienvenida4 BYTE				   23 DUP(" "),"Arquitectura del Computador 2014-I",0										;34 caracteres 
	    20
	   ] 41 72 71 75
	   69 74 65 63 74
	   75 72 61 20 64
	   65 6C 20 43 6F
	   6D 70 75 74 61
	   64 6F 72 20 32
	   30 31 34 2D 49
	   00
 000000C1 20 00			mensajeBienvenida5 BYTE			       " ",0																					;1 caracter   
 000000C3  00000016 [		mensajeBienvenida6 BYTE				   22 DUP(" "),"Este software fue desarrollado por:",0										;35 caracteres
	    20
	   ] 45 73 74 65
	   20 73 6F 66 74
	   77 61 72 65 20
	   66 75 65 20 64
	   65 73 61 72 72
	   6F 6C 6C 61 64
	   6F 20 70 6F 72
	   3A 00
 000000FD  00000011 [		mensajeBienvenida7 BYTE				   17 DUP(" "),"Gustavo Le",162d,"n Preciado Jim",130d,"nez C.C. 1037635880",0				;45 caracteres
	    20
	   ] 47 75 73 74
	   61 76 6F 20 4C
	   65 A2 6E 20 50
	   72 65 63 69 61
	   64 6F 20 4A 69
	   6D 82 6E 65 7A
	   20 43 2E 43 2E
	   20 31 30 33 37
	   36 33 35 38 38
	   30 00
 0000013C  00000010 [		mensajeBienvenida8 BYTE				   16 DUP(" "),"Gustavo Andr",130d,"s Angarita Vel",160d,"squez C.C. 1037635327",0			;48 caracteres
	    20
	   ] 47 75 73 74
	   61 76 6F 20 41
	   6E 64 72 82 73
	   20 41 6E 67 61
	   72 69 74 61 20
	   56 65 6C A0 73
	   71 75 65 7A 20
	   43 2E 43 2E 20
	   31 30 33 37 36
	   33 35 33 32 37
	   00
 0000017E 20 00			mensajeBienvenida9 BYTE			       " ",0																					;1 caracter
 00000180  00000013 [		mensajeBienvenida10 BYTE			   19 DUP(" "),"Este software est",160d," dise",164d,"ado para calcular",0					;41 caracteres
	    20
	   ] 45 73 74 65
	   20 73 6F 66 74
	   77 61 72 65 20
	   65 73 74 A0 20
	   64 69 73 65 A4
	   61 64 6F 20 70
	   61 72 61 20 63
	   61 6C 63 75 6C
	   61 72 00
 000001BD  00000014 [		mensajeBienvenida11 BYTE			   20 DUP(" "),"distintas medidas estad",161d,"sticas a partir",0							;39 caracteres
	    20
	   ] 64 69 73 74
	   69 6E 74 61 73
	   20 6D 65 64 69
	   64 61 73 20 65
	   73 74 61 64 A1
	   73 74 69 63 61
	   73 20 61 20 70
	   61 72 74 69 72
	   00
 000001F9  0000001B [		mensajeBienvenida12 BYTE			   27 DUP(" "),"de los datos de un archivo",0												;26 caracteres
	    20
	   ] 64 65 20 6C
	   6F 73 20 64 61
	   74 6F 73 20 64
	   65 20 75 6E 20
	   61 72 63 68 69
	   76 6F 00
 0000022F  0000000A [		mensajeBienvenida13 BYTE			   10 DUP(" "), 60 DUP("-"),0; indica el final del mensaje.									;60 caracteres
	    20
	   ]
	   0000003C [
	    2D
	   ] 00
 00000276 20 00			mensajeBienvenida14 BYTE			   " ",0																					;1 caracter

				;líneas del mensaje de despedida 
				;con espacios en blanco para que cada mensaje se vea centrado
 00000278  0000000E [		mensajeD DWORD 14 DUP(0)	; array que tiene la dirección donde empieza cada una de las líneas del mensaje
	    00000000
	   ]
 = 00000004			numLineasMsjDp = 4
 000002B0 20 00			mensajeDespedida1 BYTE			       " ",0																					;1 caracter
 000002B2  00000017 [		mensajeDespedida2 BYTE			       23 DUP(" "),"Gracias por usar nuestro software.",0										;34 caracteres
	    20
	   ] 47 72 61 63
	   69 61 73 20 70
	   6F 72 20 75 73
	   61 72 20 6E 75
	   65 73 74 72 6F
	   20 73 6F 66 74
	   77 61 72 65 2E
	   00
 000002EC 20 00			mensajeDespedida3 BYTE			       " ",0																					;1 caracter
 000002EE  00000016 [		mensajeDespedida4 BYTE				   22 DUP(" "),"Esperamos que haya sido de utilidad.",0										;36 caracteres 
	    20
	   ] 45 73 70 65
	   72 61 6D 6F 73
	   20 71 75 65 20
	   68 61 79 61 20
	   73 69 64 6F 20
	   64 65 20 75 74
	   69 6C 69 64 61
	   64 2E 00
 00000329 20 00			mensajeDespedida5 BYTE			       " ",0																					;1 caracter																				;1 caracter

 0000032B 00000000		contadorMensaje DWORD 0 ;servirá para desplazar el mensaje de bienvenida/despedida
 0000032F 00			contMensaje BYTE 0

				;cuenta cuántas veces ha sido ejecutado el programa
 00000330 00000000		contEjecuciones DWORD 0

 00000334  00000005 [		auxCiclos	DWORD 5 DUP(0); array que servirá como variables auxiliares y de control durante los ciclos
	    00000000
	   ]

 00000348 000A 0064		tiempoEspera WORD 10,100 ; tiempos de espera para las animaciones

				;fondos y colores de texto
 = 000000F9			colores1 EQU lightBlue + (white * 16); Azul claro sobre blanco
 = 0000009B			colores2 EQU lightCyan + (lightBlue * 16)
 = 0000009F			colores3 EQU white + (lightBlue * 16)


 0000034C 31 2E 20 4D 65	stringEstadisticos BYTE "1. Media aritm",130,"tica",0dh,0ah
	   64 69 61 20 61
	   72 69 74 6D 82
	   74 69 63 61 0D
	   0A
 00000361  32 2E 20 4D 65					   BYTE	"2. Mediana",0dh,0ah
	   64 69 61 6E 61
	   0D 0A
 0000036D  33 2E 20 4D 6F					   BYTE	"3. Moda",0dh,0ah
	   64 61 0D 0A
 00000376  34 2E 20 4D 65					   BYTE "4. Media geom",130,"trica",0dh,0ah
	   64 69 61 20 67
	   65 6F 6D 82 74
	   72 69 63 61 0D
	   0A
 0000038B  35 2E 20 4D 65					   BYTE	"5. Media arm",162,"nica",0dh,0ah
	   64 69 61 20 61
	   72 6D A2 6E 69
	   63 61 0D 0A
 0000039E  36 2E 20 50 65					   BYTE	"6. Percentiles",0dh,0ah
	   72 63 65 6E 74
	   69 6C 65 73 0D
	   0A
 000003AE  37 2E 20 43 75					   BYTE	"7. Cuartiles",0dh,0ah
	   61 72 74 69 6C
	   65 73 0D 0A
 000003BC  38 2E 20 44 65					   BYTE	"8. Deciles",0dh,0ah
	   63 69 6C 65 73
	   0D 0A
 000003C8  39 2E 20 4D 6F					   BYTE	"9. Momentos respecto al origen",0dh,0ah
	   6D 65 6E 74 6F
	   73 20 72 65 73
	   70 65 63 74 6F
	   20 61 6C 20 6F
	   72 69 67 65 6E
	   0D 0A
 000003E8  31 30 2E 20 4D					   BYTE	"10. Momentos centrales o respecto a la media",0dh,0ah
	   6F 6D 65 6E 74
	   6F 73 20 63 65
	   6E 74 72 61 6C
	   65 73 20 6F 20
	   72 65 73 70 65
	   63 74 6F 20 61
	   20 6C 61 20 6D
	   65 64 69 61 0D
	   0A
 00000416  31 31 2E 20 56					   BYTE	"11. Varianza",0dh,0ah
	   61 72 69 61 6E
	   7A 61 0D 0A
 00000424  31 32 2E 20 44					   BYTE	"12. Desviaci",162,"n t",161,"pica",0dh,0ah
	   65 73 76 69 61
	   63 69 A2 6E 20
	   74 A1 70 69 63
	   61 0D 0A
 0000043B  31 33 2E 20 43					   BYTE	"13. Cuasi-varianza",0dh,0ah
	   75 61 73 69 2D
	   76 61 72 69 61
	   6E 7A 61 0D 0A
 0000044F  31 34 2E 20 44					   BYTE	"14. Desviaci",162,"n media respecto a la media",0dh,0ah
	   65 73 76 69 61
	   63 69 A2 6E 20
	   6D 65 64 69 61
	   20 72 65 73 70
	   65 63 74 6F 20
	   61 20 6C 61 20
	   6D 65 64 69 61
	   0D 0A
 00000479  31 35 2E 20 44					   BYTE	"15. Desviaci",162,"n media respecto a la mediana",0dh,0ah,0
	   65 73 76 69 61
	   63 69 A2 6E 20
	   6D 65 64 69 61
	   20 72 65 73 70
	   65 63 74 6F 20
	   61 20 6C 61 20
	   6D 65 64 69 61
	   6E 61 0D 0A 00

				;direccion del archivo
 000004A6  00000104 [		urlDatos BYTE 260 DUP(0)
	    00
	   ]
 000005AA 00000000		fileHandle  HANDLE ?

				;arreglos con los datos, los datos sin repetir y las frecuencias de los datos sin repetir
 = 00000258			maxDatos = 600
 000005AE  00000258 [		numeros REAL8 maxDatos DUP(-1.), -1.
	    BFF0000000000000
	   ]
	   BFF0000000000000
 00001876  00000258 [		numerosDistintos REAL8 maxDatos DUP(-1.), -1.
	    BFF0000000000000
	   ]
	   BFF0000000000000
 00002B3E  00000258 [		frecuencias REAL8 maxDatos DUP(-1.)
	    BFF0000000000000
	   ]
 00003DFE 00000000		cantDatos DWORD 0
 00003E02 00000000		cantDatosDistintos DWORD 0
 00003E06 00000000		frecuenciaMax DWORD 0 ;para la moda

				;auxiliar para leer los datos
 = 00001388			tamanoBufer = 5000
 00003E0A  00001388 [		buferArchivo BYTE tamanoBufer DUP(?), 0
	    00
	   ] 00
 00005193 00			datoActual BYTE ?
 00005194			realActual REAL8 ?
	   0000000000000000
 0000519C 00000000		coma DWORD 0
 000051A0 00000000		realesLeidos DWORD 0

				;auxiliares para las sumatorias
 000051A4			auxSumatoria REAL8 0.
	   0000000000000000
 000051AC			diez REAL8 10.
	   4024000000000000
 000051B4			unDecimo REAL8 0.1
	   3FB999999999999A

				;estadisticos
 000051BC			media REAL8 ?
	   0000000000000000
 000051C4			mediana REAL8 ?
	   0000000000000000
				;moda REAL8 maxDatos DUP(-1.), -1.
 000051CC			mediageometrica REAL8 ?
	   0000000000000000
 000051D4			mediaarmonica REAL8 ?
	   0000000000000000
 000051DC  00000065 [		percentiles REAL8 101 DUP(-1.)
	    BFF0000000000000
	   ]
 00005504  00000005 [		cuartiles REAL8 5 DUP(-1.)
	    BFF0000000000000
	   ]
 0000552C  0000000B [		deciles REAL8 11 DUP(-1.)
	    BFF0000000000000
	   ]
 00005584			momentosOrigen REAL8 ?
	   0000000000000000
 0000558C			momentosCentrales REAL8 ?
	   0000000000000000
 00005594			varianza REAL8 ?
	   0000000000000000
 0000559C			desvEstandar REAL8 ?
	   0000000000000000
 000055A4			cuasiVarianza REAL8 ?
	   0000000000000000
 000055AC			desvMedia REAL8 ?
	   0000000000000000
 000055B4			desvMediana REAL8 ?
	   0000000000000000


				;contiene booleanos que indican si el usuario solicitó el estadístico n
 000055BC  00000028 [		buferUsuario BYTE 40 DUP(0)
	    00
	   ]
 000055E4  0000000F [		boolEstadisticos DWORD 15 DUP(0)
	    00000000
	   ]

				;apunta a los diferentes estadisticos
 00005620  0000000F [		ptrEstaadisticos PTRREAL8 15 DUP(?)
	    00000000
	   ]






 00000000			.CODE

				;-----------------------------------------------------------------------------------------------------------
 00000000			main PROC
				;-----------------------------------------------------------------------------------------------------------
 00000000  9B DB E3		FINIT

				;prepara la consola
 00000003  B8 0000009B		MOV eax, colores2
 00000008  E8 00000000 E	CALL SetTextColor
 0000000D  E8 00000000 E	CALL Clrscr

				;mensaje de bienvenida
 00000012  E8 000001E4		CALL pintarBarrasIni
 00000017  E8 0000006D		CALL cargarMensaje
 0000001C			inicio:
 0000001C  E8 00000127		CALL mostrarMensaje
 00000021  FE 05 0000032F R	INC contMensaje
 00000027  80 3D 0000032F R	CMP contMensaje, 5 ;23
	   05
 0000002E  7C EC		JL inicio
 00000030  E8 00000000 E	CALL waitMsg
 00000035  E8 00000000 E	CALL Clrscr

				;hace todos los cálculos
 0000003A  E8 00000339		CALL calcularEstadisticos

 0000003F			ejec:
 0000003F  B8 0000009F		MOV eax, colores3
 00000044  E8 00000000 E	CALL SetTextColor
 00000049  E8 00000000 E	CALL Clrscr
 0000004E  E8 00000264		CALL contadorEjec

 00000053  E8 0000048A		CALL pedirEstadisticos
 00000058  E8 00000486		CALL mostrarEstadisticosSelec

				mWrite "Desea ejecutar nuevamente el programa? 1=si, 0=no"
 0000565C		     1		.data		
 0000565C 44 65 73 65 61     1		??0000 BYTE "Desea ejecutar nuevamente el programa? 1=si, 0=no",0	
	   20 65 6A 65 63
	   75 74 61 72 20
	   6E 75 65 76 61
	   6D 65 6E 74 65
	   20 65 6C 20 70
	   72 6F 67 72 61
	   6D 61 3F 20 31
	   3D 73 69 2C 20
	   30 3D 6E 6F 00
 0000005D		     1		.code
 0000005D  52		     1		push	edx
 0000005E  BA 0000565C R     1		mov	edx,OFFSET ??0000
 00000063  E8 00000000 E     1		call	WriteString
 00000068  5A		     1		pop	edx
 00000069  E8 00000000 E	CALL Crlf
 0000006E  E8 00000000 E	CALL readInt
 00000073  83 F8 00		CMP eax, 0 
 00000076  75 C7		JNE ejec

 00000078  E8 00000288		CALL mostrarDespedida

 0000007D  E8 00000000 E	CALL waitMsg
					exit
 00000089			main ENDP

				;-----------------------------------------------------------------------------------------------------------
 00000089			cargarMensaje PROC
				;Carga los mensajes en el array
				;-----------------------------------------------------------------------------------------------------------
 00000089  C7 05 0000000C R	MOV mensaje,OFFSET mensajeBienvenida1 
	   00000044 R
 00000093  C7 05 00000010 R	MOV [mensaje+4],OFFSET mensajeBienvenida2
	   00000046 R
 0000009D  C7 05 00000014 R	MOV [mensaje+8],OFFSET mensajeBienvenida3
	   00000085 R
 000000A7  C7 05 00000018 R	MOV [mensaje+12],OFFSET mensajeBienvenida4
	   00000087 R
 000000B1  C7 05 0000001C R	MOV [mensaje+16],OFFSET mensajeBienvenida5
	   000000C1 R
 000000BB  C7 05 00000020 R	MOV [mensaje+20],OFFSET mensajeBienvenida6
	   000000C3 R
 000000C5  C7 05 00000024 R	MOV [mensaje+24],OFFSET mensajeBienvenida7
	   000000FD R
 000000CF  C7 05 00000028 R	MOV [mensaje+28],OFFSET mensajeBienvenida8
	   0000013C R
 000000D9  C7 05 0000002C R	MOV [mensaje+32],OFFSET mensajeBienvenida9
	   0000017E R
 000000E3  C7 05 00000030 R	MOV [mensaje+36],OFFSET mensajeBienvenida10
	   00000180 R
 000000ED  C7 05 00000034 R	MOV [mensaje+40],OFFSET mensajeBienvenida11
	   000001BD R
 000000F7  C7 05 00000038 R	MOV [mensaje+44],OFFSET mensajeBienvenida12
	   000001F9 R
 00000101  C7 05 0000003C R	MOV [mensaje+48],OFFSET mensajeBienvenida13
	   0000022F R
 0000010B  C7 05 00000040 R	MOV [mensaje+52],OFFSET mensajeBienvenida14
	   00000276 R

 00000115  C7 05 00000278 R	MOV mensajeD,OFFSET mensajeDespedida1
	   000002B0 R
 0000011F  C7 05 0000027C R	MOV [mensajeD+4],OFFSET mensajeDespedida2
	   000002B2 R
 00000129  C7 05 00000280 R	MOV [mensajeD+8],OFFSET mensajeDespedida3
	   000002EC R
 00000133  C7 05 00000284 R	MOV [mensajeD+12],OFFSET mensajeDespedida4
	   000002EE R
 0000013D  C7 05 00000288 R	MOV [mensajeD+16],OFFSET mensajeDespedida5
	   00000329 R

 00000147  C3			RET
 00000148			cargarMensaje ENDP

				;-----------------------------------------------------------------------------------------------------------
 00000148			mostrarMensaje PROC
				;Muestra el mensaje de bienvenida en 6 líneas entre dos barras animadas, las 6 líneas se van desplazando para 
				;mostrar todo el mensaje de bienvenida
				;-----------------------------------------------------------------------------------------------------------

 00000148  E8 00000000 E	CALL Clrscr ; limpiar la pantalla

 0000014D  E8 00000121		CALL animarBarra
 00000152  E8 0000011C		CALL animarBarra

				;CALL Crlf

 00000157  B8 0000009F		MOV eax, colores3
 0000015C  E8 00000000 E	call SetTextColor

 00000161  B9 00000006		MOV ecx,6
 00000166  A1 0000032B R	MOV eax,contadorMensaje ; indica en qué línea debe empezar

 0000016B  A3 00000334 R	MOV auxCiclos,eax
 00000170			CICLO: ; en este ciclo se imprimen las líneas dentro de  las barras

 00000170  A1 00000334 R		MOV eax,auxCiclos
 00000175  BA 00000004			MOV edx,4
 0000017A  F7 E2			MUL edx ; multiplica el numero de la línea por 4 para el desplazamiento en memoria

 0000017C  8B 90 0000000C R		MOV edx, [mensaje+eax]
 00000182  E8 00000000 E		CALL WriteString ;imprime la línea del mensaje
 00000187  E8 00000000 E		CALL Crlf

 0000018C  83 3D 00000334 R		CMP auxCiclos,numLineasMsjBv ; controla que el valor de auxCiclos siempre este entre 0 y el número de líneas del mensaje
	   0D
 00000193  7C 0C			JL MENOR
 00000195  C7 05 00000334 R		MOV auxCiclos,0
	   00000000
 0000019F  EB 06			JMP NoMENOR
 000001A1				MENOR:
 000001A1  FF 05 00000334 R		INC auxCiclos
 000001A7				NoMENOR:

 000001A7  E2 C7		LOOP CICLO

				;CALL Crlf

 000001A9  83 3D 0000032B R	cmp contadorMensaje,numLineasMsjBv ; controla que el valor de contadorMensaje siempre este entre 0 y el número de líneas del mensaje
	   0D
 000001B0  7C 0C		JL MEN
 000001B2  C7 05 0000032B R	MOV contadorMensaje,0
	   00000000
 000001BC  EB 06		JMP NoMEN
 000001BE			MEN:
 000001BE  FF 05 0000032B R	INC contadormensaje
 000001C4			NoMEN:

 000001C4  E8 000000AA		CALL animarBarra
 000001C9  E8 000000A5		CALL animarBarra


 000001CE  66| A1			MOV ax, [tiempoEspera+2] 
	   0000034A R
					
 000001D4  E8 00000000 E		CALL delay
					
 000001D9  83 3D 00000008 R		CMP contadorBarra, 6
	   06
 000001E0  7C 0C			JL menor6
 000001E2  C7 05 00000008 R			MOV contadorBarra, 0
	   00000000
 000001EC  EB 0C				JMP finsi
 000001EE				menor6:
 000001EE  FF 05 00000008 R			INC contadorBarra
 000001F4  FF 05 00000008 R			INC contadorBarra
 000001FA				finsi:
					
 000001FA  C3			RET
 000001FB			mostrarMensaje ENDP

				;-----------------------------------------------------------------------------------------------------------
 000001FB			pintarBarrasIni PROC
				;Pinta las barras superior e inferior en una animación que pinta de a 4 caracteres (código ascii 176) hasta llegar a 80
				;-----------------------------------------------------------------------------------------------------------
 000001FB  E8 0000002E		CALL pintarBarra ; barra superior
 00000200  E8 00000029		CALL pintarBarra ; barra superior

				;8 líneas en las que irá el mensaje de bienvenida
				;Líneas en blanco durante la entrada de las barras
				;CALL Crlf
 00000205  E8 00000000 E	CALL Crlf
 0000020A  E8 00000000 E	CALL Crlf
 0000020F  E8 00000000 E	CALL Crlf	
 00000214  E8 00000000 E	CALL Crlf
 00000219  E8 00000000 E	CALL Crlf
 0000021E  E8 00000000 E	CALL Crlf
				;CALL Crlf

 00000223  E8 00000006		CALL pintarBarra ; barra inferior
 00000228  E8 00000001		CALL pintarBarra ; barra inferior

 0000022D  C3			RET
 0000022E			pintarBarrasIni ENDP

				;-----------------------------------------------------------------------------------------------------------
 0000022E			pintarBarra PROC
				;Procedimiento auxiliar para pintarBarrasIni este pinta cada una de las barras cada que es llamado
				;-----------------------------------------------------------------------------------------------------------
 0000022E  B8 0000009B		MOV eax, colores2
 00000233  E8 00000000 E	CALL SetTextColor

 00000238  B9 00000014		MOV	ecx, 20 ; el ciclo se realizará 20 veces para llegar a 80 caracteres
					
 0000023D			CiloImprimir:
						
 0000023D  BA 00000000 R		MOV edx, OFFSET CuadrosAscii;
 00000242  E8 00000000 E		CALL	WriteString
 00000247  BA 00000002 R		MOV edx, OFFSET CuadrosAscii[2];
 0000024C  E8 00000000 E		CALL	WriteString
 00000251  BA 00000004 R		MOV edx, OFFSET CuadrosAscii[4];
 00000256  E8 00000000 E		CALL	WriteString
 0000025B  BA 00000006 R		MOV edx, OFFSET CuadrosAscii[6];
 00000260  E8 00000000 E		CALL	WriteString

 00000265  66| A1			MOV ax, tiempoEspera 
	   00000348 R
 0000026B  E8 00000000 E		CALL delay
					
					
 00000270  E2 CB		LOOP CiloImprimir

 00000272  C3			RET
 00000273			pintarBarra ENDP

				;-----------------------------------------------------------------------------------------------------------
 00000273			animarBarra PROC
				; Procedimiento para que la barra de cuadros parpadee intercambiando el simbolo ascii 176 y 177
				; cambia el caracter con el que se pinta la barra cada que es invocado
				;-----------------------------------------------------------------------------------------------------------
 00000273  B8 0000009B		MOV eax, colores2
 00000278  E8 00000000 E	CALL SetTextColor

 0000027D  66| B9 0050		MOV cx,80 ; hará un ciclo 40 veces pintando de a dos caracteres 176 o 177
 00000281			L1:

 00000281  BA 00000000 R		MOV edx, OFFSET CuadrosAscii
 00000286  03 15 00000008 R		ADD edx, contadorBarra
 0000028C  E8 00000000 E		CALL	WriteString
 00000291  83 3D 00000008 R		CMP contadorBarra, 6
	   06
 00000298  7C 0C			JL menor6
 0000029A  C7 05 00000008 R			MOV contadorBarra, 0
	   00000000
 000002A4  EB 0C				JMP finsi
 000002A6				menor6:
 000002A6  FF 05 00000008 R			INC contadorBarra
 000002AC  FF 05 00000008 R			INC contadorBarra
 000002B2				finsi:

 000002B2  66| 49		DEC cx
 000002B4  75 CB		JNZ L1 ;fin cilo para pintar la barra
						
 000002B6  C3			RET
 000002B7			animarBarra ENDP


				;-----------------------------------------------------------------------------------------------------------
 000002B7			contadorEjec PROC
				;Muestra el número de veces que se ha ejecutado el programa
				;Solo se muestra después de la primera ejecución
				;-----------------------------------------------------------------------------------------------------------

 000002B7  83 3D 00000330 R	CMP contEjecuciones, 0
	   00
 000002BE  74 3E		JE ceroEjec

				;muestra el número de veces que se ha ejecutado el programa
				mWrite "El programa se ha ejecutado "
 0000568E		     1		.data		
 0000568E 45 6C 20 70 72     1		??0001 BYTE "El programa se ha ejecutado ",0	
	   6F 67 72 61 6D
	   61 20 73 65 20
	   68 61 20 65 6A
	   65 63 75 74 61
	   64 6F 20 00
 000002C0		     1		.code
 000002C0  52		     1		push	edx
 000002C1  BA 0000568E R     1		mov	edx,OFFSET ??0001
 000002C6  E8 00000000 E     1		call	WriteString
 000002CB  5A		     1		pop	edx
 000002CC  A1 00000330 R	MOV eax, contEjecuciones
 000002D1  E8 00000000 E	CALL writeDec
 000002D6  83 3D 00000330 R	CMP contEjecuciones, 1
	   01
 000002DD  75 0E		JNE noUno
				mWrite " vez"
 000056AB		     1		.data		
 000056AB 20 76 65 7A 00     1		??0002 BYTE " vez",0	
 000002DF		     1		.code
 000002DF  52		     1		push	edx
 000002E0  BA 000056AB R     1		mov	edx,OFFSET ??0002
 000002E5  E8 00000000 E     1		call	WriteString
 000002EA  5A		     1		pop	edx
 000002EB  EB 0C		JMP todos
 000002ED			noUno:
				mWrite " veces"
 000056B0		     1		.data		
 000056B0 20 76 65 63 65     1		??0003 BYTE " veces",0	
	   73 00
 000002ED		     1		.code
 000002ED  52		     1		push	edx
 000002EE  BA 000056B0 R     1		mov	edx,OFFSET ??0003
 000002F3  E8 00000000 E     1		call	WriteString
 000002F8  5A		     1		pop	edx
 000002F9			todos:
 000002F9  E8 00000000 E	CALL Crlf

 000002FE			ceroEjec:

 000002FE  FF 05 00000330 R	INC contEjecuciones

 00000304  C3			RET
 00000305			contadorEjec ENDP


				;-----------------------------------------------------------------------------------------------------------
 00000305			mostrarDespedida PROC
				;Muestra el mensaje de despedida
				;-----------------------------------------------------------------------------------------------------------
 00000305  E8 00000000 E	CALL Clrscr ; limpiar la pantalla

 0000030A  E8 FFFFFEEC		call pintarBarrasIni
 0000030F  FF 0D 00000008 R	DEC contadorBarra
 00000315  FF 0D 00000008 R	DEC contadorBarra

 0000031B  E8 00000000 E	CALL Clrscr

 00000320  E8 FFFFFF4E		CALL animarBarra
 00000325  E8 FFFFFF49		CALL animarBarra

				;CALL Crlf

 0000032A  B8 0000009F		mov eax, colores3
 0000032F  E8 00000000 E	call SetTextColor

 00000334  B9 00000004		MOV ecx, numLineasMsjDp
 00000339  41			INC ecx

 0000033A  C7 05 00000334 R	MOV auxCiclos, 0
	   00000000

 00000344			CICLOFIN: ; en este ciclo se imprimen las líneas dentro de  las barras

 00000344  A1 00000334 R		MOV eax, auxCiclos

 00000349  BA 00000004			MOV edx,4
 0000034E  F7 E2			MUL edx ; multiplica el numero de la línea por 4 para el desplazamiento en memoria

 00000350  8B 90 00000278 R		MOV edx, [mensajeD+eax]
 00000356  E8 00000000 E		CALL WriteString ;imprime la línea del mensaje
 0000035B  E8 00000000 E		CALL Crlf
					
 00000360  FF 05 00000334 R		INC auxCiclos

 00000366  E2 DC		LOOP CICLOFIN

 00000368  E8 00000000 E	CALL Crlf

 0000036D  E8 FFFFFF01		CALL animarBarra
 00000372  E8 FFFFFEFC		CALL animarBarra

 00000377  C3			RET
 00000378			mostrarDespedida ENDP


				;-----------------------------------------------------------------------------------------------------------
 00000378			calcularEstadisticos PROC
				;Carga el archivo y calcula los estadísticos
				;-----------------------------------------------------------------------------------------------------------
 00000378  B8 0000009F		mov eax, colores3
 0000037D  E8 00000000 E	call SetTextColor

				;pide la ubicación del archivo y lo abre
				mWrite "Por favor ingrese la ruta del archivo que contiene los datos: "
 000056B7		     1		.data		
 000056B7 50 6F 72 20 66     1		??0004 BYTE "Por favor ingrese la ruta del archivo que contiene los datos: ",0	
	   61 76 6F 72 20
	   69 6E 67 72 65
	   73 65 20 6C 61
	   20 72 75 74 61
	   20 64 65 6C 20
	   61 72 63 68 69
	   76 6F 20 71 75
	   65 20 63 6F 6E
	   74 69 65 6E 65
	   20 6C 6F 73 20
	   64 61 74 6F 73
	   3A 20 00
 00000382		     1		.code
 00000382  52		     1		push	edx
 00000383  BA 000056B7 R     1		mov	edx,OFFSET ??0004
 00000388  E8 00000000 E     1		call	WriteString
 0000038D  5A		     1		pop	edx
 0000038E  E8 00000000 E	CALL crlf

 00000393			preguntaRuta:
 00000393  BA 000004A6 R	MOV edx, OFFSET urlDatos
 00000398  B9 00000104		MOV ecx, SIZEOF urlDatos
 0000039D  E8 00000000 E	CALL readString

 000003A2  BA 000004A6 R	MOV	edx,OFFSET urlDatos
 000003A7  E8 00000000 E	CALL OpenInputFile
 000003AC  A3 000005AA R	MOV	fileHandle, eax

				;revisa que se haya abierto correctamente el archivo
 000003B1  83 F8 FF		CMP	eax, INVALID_HANDLE_VALUE
 000003B4  75 0E		JNE	file_ok
				mWrite <"No se pudo abrir el archivo. Por favor ingrese una direcci",162,"n v",160,"lida",0dh,0ah>
 000056F6		     1		.data		
 000056F6 4E 6F 20 73 65     1		??0005 BYTE "No se pudo abrir el archivo. Por favor ingrese una direcci",162,"n v",160,"lida",0dh,0ah,0	
	   20 70 75 64 6F
	   20 61 62 72 69
	   72 20 65 6C 20
	   61 72 63 68 69
	   76 6F 2E 20 50
	   6F 72 20 66 61
	   76 6F 72 20 69
	   6E 67 72 65 73
	   65 20 75 6E 61
	   20 64 69 72 65
	   63 63 69 A2 6E
	   20 76 A0 6C 69
	   64 61 0D 0A 00
 000003B6		     1		.code
 000003B6  52		     1		push	edx
 000003B7  BA 000056F6 R     1		mov	edx,OFFSET ??0005
 000003BC  E8 00000000 E     1		call	WriteString
 000003C1  5A		     1		pop	edx
 000003C2  EB CF		JMP	preguntaRuta
 000003C4			file_ok:

				;lee el archivo o sale si hay un error leyendo
 000003C4  BA 00003E0A R	MOV	edx, OFFSET buferArchivo
 000003C9  B9 00001388		MOV	ecx, tamanoBufer
 000003CE  E8 00000000 E	CALL ReadFromFile
 000003D3  73 13		JNC	check_buffer_size
				mWrite <"Error leyendo el archivo. Por favor ingrese una direcci",162,"n v",160,"lida",0dh,0ah>
 0000573C		     1		.data		
 0000573C 45 72 72 6F 72     1		??0006 BYTE "Error leyendo el archivo. Por favor ingrese una direcci",162,"n v",160,"lida",0dh,0ah,0	
	   20 6C 65 79 65
	   6E 64 6F 20 65
	   6C 20 61 72 63
	   68 69 76 6F 2E
	   20 50 6F 72 20
	   66 61 76 6F 72
	   20 69 6E 67 72
	   65 73 65 20 75
	   6E 61 20 64 69
	   72 65 63 63 69
	   A2 6E 20 76 A0
	   6C 69 64 61 0D
	   0A 00
 000003D5		     1		.code
 000003D5  52		     1		push	edx
 000003D6  BA 0000573C R     1		mov	edx,OFFSET ??0006
 000003DB  E8 00000000 E     1		call	WriteString
 000003E0  5A		     1		pop	edx
 000003E1  E8 00000000 E	CALL	WriteWindowsMsg
 000003E6  EB AB		JMP	preguntaRuta
					
 000003E8			check_buffer_size:
 000003E8  3D 00001388		CMP	eax, tamanoBufer
 000003ED  72 0E		JB	buf_size_ok
				mWrite <"El archivo es demasiado extenso. Ingrese la direcci",162,"n de un archivo m",160,"s corto",0dh,0ah>
 0000577F		     1		.data		
 0000577F 45 6C 20 61 72     1		??0007 BYTE "El archivo es demasiado extenso. Ingrese la direcci",162,"n de un archivo m",160,"s corto",0dh,0ah,0	
	   63 68 69 76 6F
	   20 65 73 20 64
	   65 6D 61 73 69
	   61 64 6F 20 65
	   78 74 65 6E 73
	   6F 2E 20 49 6E
	   67 72 65 73 65
	   20 6C 61 20 64
	   69 72 65 63 63
	   69 A2 6E 20 64
	   65 20 75 6E 20
	   61 72 63 68 69
	   76 6F 20 6D A0
	   73 20 63 6F 72
	   74 6F 0D 0A 00
 000003EF		     1		.code
 000003EF  52		     1		push	edx
 000003F0  BA 0000577F R     1		mov	edx,OFFSET ??0007
 000003F5  E8 00000000 E     1		call	WriteString
 000003FA  5A		     1		pop	edx
 000003FB  EB 96		JMP	preguntaRuta
					
 000003FD			buf_size_ok:	
 000003FD  C6 80 00003E0A R	MOV	buferArchivo[eax],0 ;terminación nula para el archivo
	   00

				;cierra el handle
 00000404  A1 000005AA R	MOV	eax,fileHandle
 00000409  E8 00000000 E	CALL CloseFile

				;se leen los números y se meten en el arreglo

 0000040E			leerNum:
					;carga el cero
 0000040E  D9 EE			FLDZ

					;inicializa el valor de coma en 0 (falso)
 00000410  C7 05 0000519C R		MOV coma, 0
	   00000000

					;ciclo de lectura de caracteres
 0000041A  B9 00001388			MOV ecx, tamanoBufer
 0000041F  BE 00000000			MOV esi, 0
 00000424				leerChar:

						;guarda el valor actual del real en el auxiliar
 00000424  DD 1D 00005194 R			FSTP realActual

 0000042A  B8 00000000				MOV eax, 0
 0000042F  8A 86 00003E0A R			MOV al, buferArchivo[esi]
 00000435  46					INC esi

						;si el archivo terminó, sale del ciclo
 00000436  3C 00				CMP al, 0
 00000438  0F 84 000000A3			JE finLectura

						;si hay cr o lf, pasa al siguiente numero
 0000043E  3C 0D				CMP al, 13
 00000440  74 68				JE finNumero
 00000442  3C 0A				CMP al, 10
 00000444  74 64				JE finNumero
					
						;si hay una coma o un punto, empieza a poner los decimales
 00000446  3C 2C				CMP al, 44
 00000448  75 0A				JNE noEsComa
 0000044A  C7 05 0000519C R			MOV coma, 1
	   00000001
 00000454					noEsComa:
 00000454  3C 2E				CMP al, 46
 00000456  75 0A				JNE noEsPunto
 00000458  C7 05 0000519C R			MOV coma, 1
	   00000001
 00000462					noEsPunto:

						;convierte el caracter en el número que representa
 00000462  83 E8 30				SUB eax, 48

						;guarda el valor en el auxiliar
 00000465  A2 00005193 R			MOV datoActual, al
 0000046A  DB 05 00005193 R			FILD DWORD PTR datoActual ;el valor actual del real total está en st(1)

						;si coma es 0 (falso), multiplica por 10
 00000470  83 3D 0000519C R			CMP coma, 0
	   00
 00000477  75 16				JNE decimales
 00000479  DD 05 00005194 R			FLD realActual
 0000047F  DC 0D 000051AC R			FMUL diez
 00000485  DE C1				FADD
 00000487  DD 1D 00005194 R			FSTP realActual
 0000048D  EB 14				JMP finChar

						;si coma es 1 (verdadero), divide por 10
 0000048F					decimales:
 0000048F  DC 0D 000051B4 R			FMUL unDecimo
 00000495  DD 05 00005194 R			FLD realActual
 0000049B  DE C1				FADD
 0000049D  DD 1D 00005194 R			FSTP realActual

 000004A3					finChar:
 000004A3  49				DEC ecx
 000004A4  0F 85 FFFFFF7A		JNZ leerChar
 000004AA				finNumero:
					
 000004AA  DD 05 00005194 R		FLD realActual
 000004B0  E8 00000000 E		CALL writeFloat
 000004B5  E8 00000000 E		CALL waitmsg

					;guarda el número en el array
 000004BA  DD 05 00005194 R		FLD realActual
 000004C0  A1 000051A0 R		MOV eax, realesLeidos
 000004C5  DD 98 000005AE R		FSTP numeros[eax]

 000004CB  FF 05 000051A0 R		INC realesLeidos
 000004D1  81 3D 000051A0 R		CMP realesLeidos, maxDatos
	   00000258
 000004DB  0F 8C FFFFFF2D		JL leerNum
 000004E1			finLectura:



 000004E1  C3			RET
 000004E2			calcularEstadisticos ENDP

				;-----------------------------------------------------------------------------------------------------------
 000004E2			pedirEstadisticos PROC
				;Pide al usuario ingresar los estadísticos que desea
				;-----------------------------------------------------------------------------------------------------------

 000004E2  C3			RET
 000004E3			pedirEstadisticos ENDP

				;-----------------------------------------------------------------------------------------------------------
 000004E3			mostrarEstadisticosSelec PROC
				;Muestra los estadísticos seleccionados por el usuario
				;-----------------------------------------------------------------------------------------------------------

 000004E3  C3			RET
 000004E4			mostrarEstadisticosSelec ENDP

				;-----------------------------------------------------------------------------------------------------------
 000004E4			imprimirDato PROC
				;Muestra un único dato
				;-----------------------------------------------------------------------------------------------------------

 000004E4  C3			RET
 000004E5			imprimirDato ENDP

				;-----------------------------------------------------------------------------------------------------------
 000004E5			imprimirArreglo PROC
				;Muestra un arreglo de datos
				;-----------------------------------------------------------------------------------------------------------

 000004E5  C3			RET
 000004E6			imprimirArreglo ENDP

				;fin del programa
				END main
Microsoft (R) Macro Assembler Version 10.00.30319.01	    06/08/14 00:48:42
ESTADÍSTICAS						(main.asm  Symbols 2 - 1




Macros:

                N a m e                 Type

IsDefined  . . . . . . . . . . .	Func
Startup  . . . . . . . . . . . .	Proc
mDumpMem . . . . . . . . . . . .	Proc
mDump  . . . . . . . . . . . . .	Proc
mGotoxy  . . . . . . . . . . . .	Proc
mReadString  . . . . . . . . . .	Proc
mShowRegister  . . . . . . . . .	Proc
mShow  . . . . . . . . . . . . .	Proc
mWriteLn . . . . . . . . . . . .	Proc
mWriteSpace  . . . . . . . . . .	Proc
mWriteString . . . . . . . . . .	Proc
mWrite . . . . . . . . . . . . .	Proc


Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Types:

                N a m e                  Size     Attr

PTRREAL8 . . . . . . . . . . . .	 00000004     Near32 PTR QWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00000400 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000057CF Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000004E6 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
animarBarra  . . . . . . . . . .	P Near	 00000273 _TEXT	Length= 00000044 Public STDCALL
  L1 . . . . . . . . . . . . . .	L Near	 00000281 _TEXT	
  menor6 . . . . . . . . . . . .	L Near	 000002A6 _TEXT	
  finsi  . . . . . . . . . . . .	L Near	 000002B2 _TEXT	
calcularEstadisticos . . . . . .	P Near	 00000378 _TEXT	Length= 0000016A Public STDCALL
  preguntaRuta . . . . . . . . .	L Near	 00000393 _TEXT	
  file_ok  . . . . . . . . . . .	L Near	 000003C4 _TEXT	
  check_buffer_size  . . . . . .	L Near	 000003E8 _TEXT	
  buf_size_ok  . . . . . . . . .	L Near	 000003FD _TEXT	
  leerNum  . . . . . . . . . . .	L Near	 0000040E _TEXT	
  leerChar . . . . . . . . . . .	L Near	 00000424 _TEXT	
  noEsComa . . . . . . . . . . .	L Near	 00000454 _TEXT	
  noEsPunto  . . . . . . . . . .	L Near	 00000462 _TEXT	
  decimales  . . . . . . . . . .	L Near	 0000048F _TEXT	
  finChar  . . . . . . . . . . .	L Near	 000004A3 _TEXT	
  finNumero  . . . . . . . . . .	L Near	 000004AA _TEXT	
  finLectura . . . . . . . . . .	L Near	 000004E1 _TEXT	
cargarMensaje  . . . . . . . . .	P Near	 00000089 _TEXT	Length= 000000BF Public STDCALL
contadorEjec . . . . . . . . . .	P Near	 000002B7 _TEXT	Length= 0000004E Public STDCALL
  noUno  . . . . . . . . . . . .	L Near	 000002ED _TEXT	
  todos  . . . . . . . . . . . .	L Near	 000002F9 _TEXT	
  ceroEjec . . . . . . . . . . .	L Near	 000002FE _TEXT	
imprimirArreglo  . . . . . . . .	P Near	 000004E5 _TEXT	Length= 00000001 Public STDCALL
imprimirDato . . . . . . . . . .	P Near	 000004E4 _TEXT	Length= 00000001 Public STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000089 Public STDCALL
  inicio . . . . . . . . . . . .	L Near	 0000001C _TEXT	
  ejec . . . . . . . . . . . . .	L Near	 0000003F _TEXT	
mostrarDespedida . . . . . . . .	P Near	 00000305 _TEXT	Length= 00000073 Public STDCALL
  CICLOFIN . . . . . . . . . . .	L Near	 00000344 _TEXT	
mostrarEstadisticosSelec . . . .	P Near	 000004E3 _TEXT	Length= 00000001 Public STDCALL
mostrarMensaje . . . . . . . . .	P Near	 00000148 _TEXT	Length= 000000B3 Public STDCALL
  CICLO  . . . . . . . . . . . .	L Near	 00000170 _TEXT	
  MENOR  . . . . . . . . . . . .	L Near	 000001A1 _TEXT	
  NoMENOR  . . . . . . . . . . .	L Near	 000001A7 _TEXT	
  MEN  . . . . . . . . . . . . .	L Near	 000001BE _TEXT	
  NoMEN  . . . . . . . . . . . .	L Near	 000001C4 _TEXT	
  menor6 . . . . . . . . . . . .	L Near	 000001EE _TEXT	
  finsi  . . . . . . . . . . . .	L Near	 000001FA _TEXT	
pedirEstadisticos  . . . . . . .	P Near	 000004E2 _TEXT	Length= 00000001 Public STDCALL
pintarBarrasIni  . . . . . . . .	P Near	 000001FB _TEXT	Length= 00000033 Public STDCALL
pintarBarra  . . . . . . . . . .	P Near	 0000022E _TEXT	Length= 00000045 Public STDCALL
  CiloImprimir . . . . . . . . .	L Near	 0000023D _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

??0000 . . . . . . . . . . . . .	Byte	 0000565C _DATA	
??0001 . . . . . . . . . . . . .	Byte	 0000568E _DATA	
??0002 . . . . . . . . . . . . .	Byte	 000056AB _DATA	
??0003 . . . . . . . . . . . . .	Byte	 000056B0 _DATA	
??0004 . . . . . . . . . . . . .	Byte	 000056B7 _DATA	
??0005 . . . . . . . . . . . . .	Byte	 000056F6 _DATA	
??0006 . . . . . . . . . . . . .	Byte	 0000573C _DATA	
??0007 . . . . . . . . . . . . .	Byte	 0000577F _DATA	
@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
CuadrosAscii . . . . . . . . . .	Byte	 00000000 _DATA	
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
auxCiclos  . . . . . . . . . . .	DWord	 00000334 _DATA	
auxSumatoria . . . . . . . . . .	QWord	 000051A4 _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
boolEstadisticos . . . . . . . .	DWord	 000055E4 _DATA	
brown  . . . . . . . . . . . . .	Number	 00000006h   
buferArchivo . . . . . . . . . .	Byte	 00003E0A _DATA	
buferUsuario . . . . . . . . . .	Byte	 000055BC _DATA	
cantDatosDistintos . . . . . . .	DWord	 00003E02 _DATA	
cantDatos  . . . . . . . . . . .	DWord	 00003DFE _DATA	
colores1 . . . . . . . . . . . .	Number	 000000F9h   
colores2 . . . . . . . . . . . .	Number	 0000009Bh   
colores3 . . . . . . . . . . . .	Number	 0000009Fh   
coma . . . . . . . . . . . . . .	DWord	 0000519C _DATA	
contEjecuciones  . . . . . . . .	DWord	 00000330 _DATA	
contMensaje  . . . . . . . . . .	Byte	 0000032F _DATA	
contadorBarra  . . . . . . . . .	DWord	 00000008 _DATA	
contadorMensaje  . . . . . . . .	DWord	 0000032B _DATA	
cuartiles  . . . . . . . . . . .	QWord	 00005504 _DATA	
cuasiVarianza  . . . . . . . . .	QWord	 000055A4 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
datoActual . . . . . . . . . . .	Byte	 00005193 _DATA	
deciles  . . . . . . . . . . . .	QWord	 0000552C _DATA	
desvEstandar . . . . . . . . . .	QWord	 0000559C _DATA	
desvMediana  . . . . . . . . . .	QWord	 000055B4 _DATA	
desvMedia  . . . . . . . . . . .	QWord	 000055AC _DATA	
diez . . . . . . . . . . . . . .	QWord	 000051AC _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
fileHandle . . . . . . . . . . .	DWord	 000005AA _DATA	
frecuenciaMax  . . . . . . . . .	DWord	 00003E06 _DATA	
frecuencias  . . . . . . . . . .	QWord	 00002B3E _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
maxDatos . . . . . . . . . . . .	Number	 00000258h   
mediaarmonica  . . . . . . . . .	QWord	 000051D4 _DATA	
mediageometrica  . . . . . . . .	QWord	 000051CC _DATA	
mediana  . . . . . . . . . . . .	QWord	 000051C4 _DATA	
media  . . . . . . . . . . . . .	QWord	 000051BC _DATA	
mensajeBienvenida10  . . . . . .	Byte	 00000180 _DATA	
mensajeBienvenida11  . . . . . .	Byte	 000001BD _DATA	
mensajeBienvenida12  . . . . . .	Byte	 000001F9 _DATA	
mensajeBienvenida13  . . . . . .	Byte	 0000022F _DATA	
mensajeBienvenida14  . . . . . .	Byte	 00000276 _DATA	
mensajeBienvenida1 . . . . . . .	Byte	 00000044 _DATA	
mensajeBienvenida2 . . . . . . .	Byte	 00000046 _DATA	
mensajeBienvenida3 . . . . . . .	Byte	 00000085 _DATA	
mensajeBienvenida4 . . . . . . .	Byte	 00000087 _DATA	
mensajeBienvenida5 . . . . . . .	Byte	 000000C1 _DATA	
mensajeBienvenida6 . . . . . . .	Byte	 000000C3 _DATA	
mensajeBienvenida7 . . . . . . .	Byte	 000000FD _DATA	
mensajeBienvenida8 . . . . . . .	Byte	 0000013C _DATA	
mensajeBienvenida9 . . . . . . .	Byte	 0000017E _DATA	
mensajeDespedida1  . . . . . . .	Byte	 000002B0 _DATA	
mensajeDespedida2  . . . . . . .	Byte	 000002B2 _DATA	
mensajeDespedida3  . . . . . . .	Byte	 000002EC _DATA	
mensajeDespedida4  . . . . . . .	Byte	 000002EE _DATA	
mensajeDespedida5  . . . . . . .	Byte	 00000329 _DATA	
mensajeD . . . . . . . . . . . .	DWord	 00000278 _DATA	
mensaje  . . . . . . . . . . . .	DWord	 0000000C _DATA	
momentosCentrales  . . . . . . .	QWord	 0000558C _DATA	
momentosOrigen . . . . . . . . .	QWord	 00005584 _DATA	
numLineasMsjBv . . . . . . . . .	Number	 0000000Dh   
numLineasMsjDp . . . . . . . . .	Number	 00000004h   
numerosDistintos . . . . . . . .	QWord	 00001876 _DATA	
numeros  . . . . . . . . . . . .	QWord	 000005AE _DATA	
percentiles  . . . . . . . . . .	QWord	 000051DC _DATA	
ptrEstaadisticos . . . . . . . .	DWord	 00005620 _DATA	
realActual . . . . . . . . . . .	QWord	 00005194 _DATA	
realesLeidos . . . . . . . . . .	DWord	 000051A0 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
stringEstadisticos . . . . . . .	Byte	 0000034C _DATA	
tamanoBufer  . . . . . . . . . .	Number	 00001388h   
tiempoEspera . . . . . . . . . .	Word	 00000348 _DATA	
unDecimo . . . . . . . . . . . .	QWord	 000051B4 _DATA	
urlDatos . . . . . . . . . . . .	Byte	 000004A6 _DATA	
varianza . . . . . . . . . . . .	QWord	 00005594 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
